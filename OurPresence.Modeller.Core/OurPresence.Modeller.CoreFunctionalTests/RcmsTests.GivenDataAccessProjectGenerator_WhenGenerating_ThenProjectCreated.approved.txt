file[0] = Nhvr.Rcms.DataAccess.csproj
<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net5.0</TargetFramework>
        <Configurations>Debug;Release;DebugOnPremise;DebugAzure</Configurations>
        <RootNamespace>Nhvr.Rcms.DataAccess</RootNamespace>
        <LangVersion>Preview</LangVersion>
        <Nullable>enable</Nullable>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="5.0.7">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="5.0.7" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="6.1.4" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Nhvr.Rcms.Common\Nhvr.Rcms.Common.csproj" />
    </ItemGroup>

</Project>

file[1] = usings.cs
global using System;
global using System.Collections.Generic;
global using System.Linq;
global using System.Text;
global using System.Threading.Tasks;
global using Microsoft.EntityFrameworkCore;
global using Microsoft.EntityFrameworkCore.Design;
global using Microsoft.EntityFrameworkCore.Metadata.Builders;
global using Microsoft.Extensions.Configuration;

global using Nhvr.Rcms.Common.Enums;
global using Nhvr.Rcms.Data.Models;

file[2] = Storage\Configuration.generated.cs
namespace Nhvr.Rcms.Common.Enums
{
    internal static class Configuration
    {
        public static IServiceCollection AddProductServices(this IServiceCollection services)
            => services
                .AddCommandHandler<RegisterProduct, HandleRegisterProduct>(s =>
                {
                    var dbContext = s.GetRequiredService<WarehouseDBContext>();
                    return new HandleRegisterProduct(dbContext.AddAndSave, dbContext.ProductWithSKUExists);
                })
                .AddQueryHandler<GetProducts, IReadOnlyList<ProductListItem>, HandleGetProducts>(s =>
                {
                    var dbContext = s.GetRequiredService<WarehouseDBContext>();
                    return new HandleGetProducts(dbContext.Set<Product>().AsNoTracking());
                })
                .AddQueryHandler<GetProductDetails, ProductDetails?, HandleGetProductDetails>(s =>
                {
                    var dbContext = s.GetRequiredService<WarehouseDBContext>();
                    return new HandleGetProductDetails(dbContext.Set<Product>().AsNoTracking());
                });
    
    
        public static IEndpointRouteBuilder UseProductsEndpoints(this IEndpointRouteBuilder endpoints) =>
            endpoints
                .UseRegisterProductEndpoint()
                .UseGetProductsEndpoint()
                .UseGetProductDetailsEndpoint();
    
        public static void SetupProductsModel(this ModelBuilder modelBuilder)
            => modelBuilder.Entity<Product>()
                .OwnsOne(p => p.Sku);
    }
}

file[3] = Storage\RcmsDbContext.generated.cs
namespace Nhvr.Rcms.Common.Enums
{
    public class RcmsDBContext: DbContext
    {
        public RcmsDBContext(DbContextOptions<RcmsDBContext> options)
            : base(options)
        {
    
        }
    
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.SetupProductsModel();
        }
    }
    
    public class RcmsDBContextFactory: IDesignTimeDbContextFactory<RcmsDBContext>
    {
        public RcmsDBContext CreateDbContext(params string[] args)
        {
            var optionsBuilder = new DbContextOptionsBuilder<RcmsDBContext>();
    
            if (optionsBuilder.IsConfigured)
                return new RcmsDBContext(optionsBuilder.Options);
    
            //Called by parameterless ctor Usually Migrations
            var environmentName = Environment.GetEnvironmentVariable("EnvironmentName") ?? "Development";
    
            var connectionString =
                new ConfigurationBuilder()
                    .SetBasePath(AppContext.BaseDirectory)
                    .AddJsonFile("appsettings.json")
                    .AddJsonFile($"appsettings.{environmentName}.json", optional: true, reloadOnChange: false)
                    .AddEnvironmentVariables()
                    .Build()
                    .GetConnectionString("RcmsDB");
    
            optionsBuilder.UseNpgsql(connectionString);
    
            return new RcmsDBContext(optionsBuilder.Options);
        }
    
        public static RcmsDBContext Create()
            => new RcmsDBContextFactory().CreateDbContext();
    }
}

file[4] = Configurations\ActivityLogConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ActivityLogConfiguration : IEntityTypeConfiguration<ActivityLog>
    {
        void IEntityTypeConfiguration<ActivityLog>.Configure(EntityTypeBuilder<ActivityLog> builder)
        {
            builder.ToTable("ActivityLog");
            builder.Property(p => p.Active)
                .IsRequired()
                .HasDefaultValueSql("true");
            builder.Property(p => p.ActivityType)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.IsManualEntry)
                .IsRequired()
                .HasDefaultValueSql("true");
            builder.Property(p => p.StartDate);
            builder.Property(p => p.EndDate);
            builder.Property(p => p.DateAdded);
            builder.Property(p => p.Light)
                .IsRequired();
            builder.Property(p => p.Siren)
                .IsRequired();
            builder.Property(p => p.UrgentDutyDriving)
                .IsRequired();
            builder.Property(p => p.Remark)
                .IsRequired();
            builder.Property(p => p.ShiftId)
                .IsRequired();
            builder.Property(p => p.UserId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ActivityLog> builder);
    }
}

file[5] = Configurations\AddressBookConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class AddressBookConfiguration : IEntityTypeConfiguration<AddressBook>
    {
        void IEntityTypeConfiguration<AddressBook>.Configure(EntityTypeBuilder<AddressBook> builder)
        {
            builder.ToTable("AddressBook");
            builder.Property(p => p.FloorNumber)
                .HasMaxLength(20);
            builder.Property(p => p.UnitType)
                .HasMaxLength(200);
            builder.Property(p => p.UnitNumber)
                .HasMaxLength(20);
            builder.Property(p => p.StreetName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.StreetType)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.StreetSuffix)
                .IsRequired()
                .HasMaxLength(200);
            builder.Property(p => p.StreetNumberFirst)
                .HasMaxLength(50);
            builder.Property(p => p.StreetNumberFirstPrefix)
                .HasMaxLength(50);
            builder.Property(p => p.StreetNumberFirstSuffix)
                .HasMaxLength(50);
            builder.Property(p => p.StreetNumberLast)
                .HasMaxLength(50);
            builder.Property(p => p.StreetNumberLastPrefix)
                .HasMaxLength(50);
            builder.Property(p => p.StreetNumberLastSuffix)
                .HasMaxLength(50);
            builder.Property(p => p.StreetDirectional)
                .HasMaxLength(200);
            builder.Property(p => p.PostalContainer)
                .HasMaxLength(255);
            builder.Property(p => p.PostalCode)
                .IsRequired()
                .HasMaxLength(20);
            builder.Property(p => p.Suburb)
                .IsRequired()
                .HasMaxLength(100);
            builder.Property(p => p.Country)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.FullAddress)
                .IsRequired()
                .HasMaxLength(1500);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<AddressBook> builder);
    }
}

file[6] = Configurations\AlertConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class AlertConfiguration : IEntityTypeConfiguration<Alert>
    {
        void IEntityTypeConfiguration<Alert>.Configure(EntityTypeBuilder<Alert> builder)
        {
            builder.ToTable("Alert");
            builder.Property(p => p.Active)
                .IsRequired()
                .HasDefaultValueSql("true");
            builder.Property(p => p.EffectFrom);
            builder.Property(p => p.EffectTo);
            builder.Property(p => p.Level)
                .IsRequired();
            builder.Property(p => p.Title)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Remark)
                .IsRequired()
                .HasMaxLength(1000);
            builder.Property(p => p.ReasonForDeletion)
                .IsRequired();
            builder.Property(p => p.Silent)
                .IsRequired();
            builder.Property(p => p.SilentNotifyContactId)
                .IsRequired();
            builder.Property(p => p.PersonId)
                .IsRequired();
            builder.Property(p => p.VehicleId)
                .IsRequired();
            builder.Property(p => p.OrganisationId)
                .IsRequired();
            builder.Property(p => p.UserId)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            builder.Property(p => p.IsManualEntry)
                .IsRequired()
                .HasDefaultValueSql("true");
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<Alert> builder);
    }
}

file[7] = Configurations\AzureSqlMaintenanceLogConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class AzureSqlMaintenanceLogConfiguration : IEntityTypeConfiguration<AzureSqlMaintenanceLog>
    {
        void IEntityTypeConfiguration<AzureSqlMaintenanceLog>.Configure(EntityTypeBuilder<AzureSqlMaintenanceLog> builder)
        {
            builder.ToTable("AzureSqlMaintenanceLog");
            builder.Property(p => p.Id)
                .IsRequired();
            builder.Property(p => p.OperationTime);
            builder.Property(p => p.Command)
                .IsRequired()
                .HasMaxLength(4000);
            builder.Property(p => p.ExtraInfo)
                .HasMaxLength(4000);
            builder.Property(p => p.StartTime);
            builder.Property(p => p.EndTime);
            builder.Property(p => p.StatusMessage)
                .HasMaxLength(1000);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<AzureSqlMaintenanceLog> builder);
    }
}

file[8] = Configurations\BatchProcessConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class BatchProcessConfiguration : IEntityTypeConfiguration<BatchProcess>
    {
        void IEntityTypeConfiguration<BatchProcess>.Configure(EntityTypeBuilder<BatchProcess> builder)
        {
            builder.ToTable("BatchProcess");
            builder.Property(p => p.Url)
                .IsRequired();
            builder.Property(p => p.StatusId)
                .IsRequired();
            builder.Property(p => p.StartedOn);
            builder.Property(p => p.StoppedOn);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<BatchProcess> builder);
    }
}

file[9] = Configurations\BatchProcessTaskConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class BatchProcessTaskConfiguration : IEntityTypeConfiguration<BatchProcessTask>
    {
        void IEntityTypeConfiguration<BatchProcessTask>.Configure(EntityTypeBuilder<BatchProcessTask> builder)
        {
            builder.ToTable("BatchProcessTask");
            builder.Property(p => p.TypeId)
                .IsRequired();
            builder.Property(p => p.StatusId)
                .IsRequired();
            builder.Property(p => p.EntityId)
                .IsRequired();
            builder.Property(p => p.EntityTypeId)
                .IsRequired();
            builder.Property(p => p.BatchProcessId)
                .IsRequired();
            builder.Property(p => p.ResultMessage)
                .IsRequired();
            builder.Property(p => p.StartedOn);
            builder.Property(p => p.StoppedOn);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<BatchProcessTask> builder);
    }
}

file[10] = Configurations\BatchProcessTaskItemConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class BatchProcessTaskItemConfiguration : IEntityTypeConfiguration<BatchProcessTaskItem>
    {
        void IEntityTypeConfiguration<BatchProcessTaskItem>.Configure(EntityTypeBuilder<BatchProcessTaskItem> builder)
        {
            builder.ToTable("BatchProcessTaskItem");
            builder.Property(p => p.TaskId)
                .IsRequired();
            builder.Property(p => p.StatusId)
                .IsRequired();
            builder.Property(p => p.EntityId)
                .IsRequired();
            builder.Property(p => p.EntityTypeId)
                .IsRequired();
            builder.Property(p => p.Reference)
                .IsRequired();
            builder.Property(p => p.ResultMessage)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<BatchProcessTaskItem> builder);
    }
}

file[11] = Configurations\ComplianceActionConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceActionConfiguration : IEntityTypeConfiguration<ComplianceAction>
    {
        void IEntityTypeConfiguration<ComplianceAction>.Configure(EntityTypeBuilder<ComplianceAction> builder)
        {
            builder.ToTable("ComplianceAction");
            builder.Property(p => p.TypeId)
                .IsRequired();
            builder.Property(p => p.NoticeNumber)
                .HasMaxLength(64);
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.MediaId);
            builder.Property(p => p.VehicleId);
            builder.Property(p => p.PersonId);
            builder.Property(p => p.OrganisationId);
            builder.Property(p => p.DateIssued)
                .IsRequired();
            builder.Property(p => p.NoticeIssuedDate);
            builder.Property(p => p.StateId);
            builder.Property(p => p.JuroEntry);
            builder.Property(p => p.Active)
                .IsRequired()
                .HasDefaultValueSql("true");
            builder.Property(p => p.SystemId)
                .IsRequired()
                .HasDefaultValueSql("30");
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceAction> builder);
    }
}

file[12] = Configurations\ComplianceActionImportConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceActionImportConfiguration : IEntityTypeConfiguration<ComplianceActionImport>
    {
        void IEntityTypeConfiguration<ComplianceActionImport>.Configure(EntityTypeBuilder<ComplianceActionImport> builder)
        {
            builder.ToTable("ComplianceActionImport");
            builder.Property(p => p.VehicleRegistrationStateId)
                .IsRequired();
            builder.Property(p => p.VehicleRegistrationNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.PersonGivenName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.PersonFamilyName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.PersonDateOfBirth);
            builder.Property(p => p.PersonLicenceNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.PersonLicenceStateId)
                .IsRequired();
            builder.Property(p => p.OrganisationAcn)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.OrganisationIncorporatedNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.TypeId)
                .IsRequired();
            builder.Property(p => p.DateIssued)
                .IsRequired();
            builder.Property(p => p.DateCleared);
            builder.Property(p => p.NoticeNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Line1)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Line2)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Line3)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Line4)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceActionImport> builder);
    }
}

file[13] = Configurations\ComplianceActionLocationConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceActionLocationConfiguration : IEntityTypeConfiguration<ComplianceActionLocation>
    {
        void IEntityTypeConfiguration<ComplianceActionLocation>.Configure(EntityTypeBuilder<ComplianceActionLocation> builder)
        {
            builder.ToTable("ComplianceActionLocation");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.StateId)
                .IsRequired();
            builder.Property(p => p.LocalGovernmentArea)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LgashortTitle)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Near)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.CommonName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Remark)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.MapDetail)
                .IsRequired();
            builder.Property(p => p.Address)
                .IsRequired();
            builder.Property(p => p.DateAdded);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceActionLocation> builder);
    }
}

file[14] = Configurations\ComplianceActionOffenceConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceActionOffenceConfiguration : IEntityTypeConfiguration<ComplianceActionOffence>
    {
        void IEntityTypeConfiguration<ComplianceActionOffence>.Configure(EntityTypeBuilder<ComplianceActionOffence> builder)
        {
            builder.ToTable("ComplianceActionOffence");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.Category)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.EffectiveDate);
            builder.Property(p => p.ExpiryDate);
            builder.Property(p => p.ShortTitle)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Title)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.SortOrder)
                .IsRequired();
            builder.Property(p => p.DemeritPoint)
                .IsRequired();
            builder.Property(p => p.SuspensionPeriod)
                .IsRequired();
            builder.Property(p => p.Fine)
                .IsRequired();
            builder.Property(p => p.ReportingCategory)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LegislationReference)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.PenaltyDescription)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.InfringementCategory)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.InfringementIssueCategory)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LongDescription)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Levy)
                .IsRequired();
            builder.Property(p => p.Code)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.SourceManifestId)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.CausePermitFlag)
                .IsRequired();
            builder.Property(p => p.CausePermit)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.InspectorDetail)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceActionOffence> builder);
    }
}

file[15] = Configurations\ComplianceActionServiceConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceActionServiceConfiguration : IEntityTypeConfiguration<ComplianceActionService>
    {
        void IEntityTypeConfiguration<ComplianceActionService>.Configure(EntityTypeBuilder<ComplianceActionService> builder)
        {
            builder.ToTable("ComplianceActionService");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.RegisteredAddressId)
                .IsRequired();
            builder.Property(p => p.AlternateAddressId)
                .IsRequired();
            builder.Property(p => p.Email)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ServiceEmail)
                .IsRequired();
            builder.Property(p => p.HasServiceRegisteredAddress)
                .IsRequired();
            builder.Property(p => p.HasServiceAlternateAddress)
                .IsRequired();
            builder.Property(p => p.ServiceInPerson)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceActionService> builder);
    }
}

file[16] = Configurations\ComplianceActionServiceAddressConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceActionServiceAddressConfiguration : IEntityTypeConfiguration<ComplianceActionServiceAddress>
    {
        void IEntityTypeConfiguration<ComplianceActionServiceAddress>.Configure(EntityTypeBuilder<ComplianceActionServiceAddress> builder)
        {
            builder.ToTable("ComplianceActionServiceAddress");
            builder.Property(p => p.StateId)
                .IsRequired();
            builder.Property(p => p.LocalGovernmentArea)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LgashortTitle)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Near)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.CommonName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Remark)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.MapDetail)
                .IsRequired();
            builder.Property(p => p.Address)
                .IsRequired();
            builder.Property(p => p.DateAdded);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceActionServiceAddress> builder);
    }
}

file[17] = Configurations\ComplianceActionStatusConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceActionStatusConfiguration : IEntityTypeConfiguration<ComplianceActionStatus>
    {
        void IEntityTypeConfiguration<ComplianceActionStatus>.Configure(EntityTypeBuilder<ComplianceActionStatus> builder)
        {
            builder.ToTable("ComplianceActionStatus");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.StatusId)
                .IsRequired();
            builder.Property(p => p.Reason)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.RecordedDate);
            builder.Property(p => p.ToProceedOffence)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.GivenName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.FamilyName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.UserId)
                .IsRequired();
            builder.Property(p => p.HomeLocation)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceActionStatus> builder);
    }
}

file[18] = Configurations\ComplianceActionSubComponentConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceActionSubComponentConfiguration : IEntityTypeConfiguration<ComplianceActionSubComponent>
    {
        void IEntityTypeConfiguration<ComplianceActionSubComponent>.Configure(EntityTypeBuilder<ComplianceActionSubComponent> builder)
        {
            builder.ToTable("ComplianceActionSubComponent");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.Name)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.NameCode)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Action)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ActionCode)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Information)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceActionSubComponent> builder);
    }
}

file[19] = Configurations\ComplianceDefectConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceDefectConfiguration : IEntityTypeConfiguration<ComplianceDefect>
    {
        void IEntityTypeConfiguration<ComplianceDefect>.Configure(EntityTypeBuilder<ComplianceDefect> builder)
        {
            builder.ToTable("ComplianceDefect");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.Odometer)
                .IsRequired();
            builder.Property(p => p.VehicleUnattended)
                .IsRequired();
            builder.Property(p => p.NumberPlateDefective)
                .IsRequired();
            builder.Property(p => p.LabelAttached)
                .IsRequired();
            builder.Property(p => p.RoadWorthyRequired)
                .IsRequired();
            builder.Property(p => p.ConditionOfUse)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.NoticeToBeCleared)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.VehicleNotUsed);
            builder.Property(p => p.VehicleNotUsedDay)
                .IsRequired();
            builder.Property(p => p.VehicleNotUsedHour)
                .IsRequired();
            builder.Property(p => p.InspectionType)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.NatureOfInspection)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.InspectionTypeFull)
                .IsRequired();
            builder.Property(p => p.InspectionTypePartial)
                .IsRequired();
            builder.Property(p => p.InspectionTypeOther)
                .IsRequired();
            builder.Property(p => p.InspectionTypeAudit)
                .IsRequired();
            builder.Property(p => p.DefectCategoryMinor)
                .IsRequired();
            builder.Property(p => p.DefectCategoryMajor)
                .IsRequired();
            builder.Property(p => p.DefectCategoryMajorGrounded)
                .IsRequired();
            builder.Property(p => p.DefectCategorySelfClearing)
                .IsRequired();
            builder.Property(p => p.VicRoadsInspection)
                .IsRequired();
            builder.Property(p => p.InfringementIssued)
                .IsRequired();
            builder.Property(p => p.HowIsTheVehicleDefective)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ClearanceInspection)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ClearedAt)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ClearanceOther)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ClearedReferenceId)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Direction)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MethodOfRemoval)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceDefect> builder);
    }
}

file[20] = Configurations\ComplianceDefectSubComponentConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceDefectSubComponentConfiguration : IEntityTypeConfiguration<ComplianceDefectSubComponent>
    {
        void IEntityTypeConfiguration<ComplianceDefectSubComponent>.Configure(EntityTypeBuilder<ComplianceDefectSubComponent> builder)
        {
            builder.ToTable("ComplianceDefectSubComponent");
            builder.Property(p => p.ComplianceDefectId)
                .IsRequired();
            builder.Property(p => p.Name)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.NameCode)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Action)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ActionCode)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Information)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceDefectSubComponent> builder);
    }
}

file[21] = Configurations\ComplianceDirectionDimensionConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceDirectionDimensionConfiguration : IEntityTypeConfiguration<ComplianceDirectionDimension>
    {
        void IEntityTypeConfiguration<ComplianceDirectionDimension>.Configure(EntityTypeBuilder<ComplianceDirectionDimension> builder)
        {
            builder.ToTable("ComplianceDirectionDimension");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.PersonDriverId)
                .IsRequired();
            builder.Property(p => p.PersonOperatorId)
                .IsRequired();
            builder.Property(p => p.OrganisationOperatorId)
                .IsRequired();
            builder.Property(p => p.MassLimit)
                .IsRequired();
            builder.Property(p => p.DimensionLimit)
                .IsRequired();
            builder.Property(p => p.Unsafe)
                .IsRequired();
            builder.Property(p => p.NotSecured)
                .IsRequired();
            builder.Property(p => p.Severity)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.SecureLoad)
                .IsRequired();
            builder.Property(p => p.ReduceGvm)
                .IsRequired();
            builder.Property(p => p.ReduceGvmnumber)
                .IsRequired();
            builder.Property(p => p.AdjustAxleGroup)
                .IsRequired();
            builder.Property(p => p.AdjustAxleGroupNumber)
                .IsRequired();
            builder.Property(p => p.AdjustAxleGroupBy)
                .IsRequired();
            builder.Property(p => p.AdjustVehicleDimension)
                .IsRequired();
            builder.Property(p => p.AdjustVehicleDimensionLength)
                .IsRequired();
            builder.Property(p => p.AdjustVehicleDimensionWidth)
                .IsRequired();
            builder.Property(p => p.AdjustVehicleDimensionHeight)
                .IsRequired();
            builder.Property(p => p.AdjustVehicleDimensionOverhang)
                .IsRequired();
            builder.Property(p => p.NominatedPlace)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Condition)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceDirectionDimension> builder);
    }
}

file[22] = Configurations\ComplianceDirectionDimensionsHardcopyConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceDirectionDimensionsHardcopyConfiguration : IEntityTypeConfiguration<ComplianceDirectionDimensionsHardcopy>
    {
        void IEntityTypeConfiguration<ComplianceDirectionDimensionsHardcopy>.Configure(EntityTypeBuilder<ComplianceDirectionDimensionsHardcopy> builder)
        {
            builder.ToTable("ComplianceDirectionDimensionsHardcopy");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.PersonDriverId)
                .IsRequired();
            builder.Property(p => p.PersonOperatorId)
                .IsRequired();
            builder.Property(p => p.OrganisationOperatorId)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceDirectionDimensionsHardcopy> builder);
    }
}

file[23] = Configurations\ComplianceDirectionFatigueConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceDirectionFatigueConfiguration : IEntityTypeConfiguration<ComplianceDirectionFatigue>
    {
        void IEntityTypeConfiguration<ComplianceDirectionFatigue>.Configure(EntityTypeBuilder<ComplianceDirectionFatigue> builder)
        {
            builder.ToTable("ComplianceDirectionFatigue");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.WorkDiaryPageNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ReasonableBeliefFatigue)
                .IsRequired();
            builder.Property(p => p.ReasonableBeliefMaximumWorkTime)
                .IsRequired();
            builder.Property(p => p.ReasonableBeliefMinimumRestTime)
                .IsRequired();
            builder.Property(p => p.ReasonableBeliefNoWorkDiary)
                .IsRequired();
            builder.Property(p => p.SuitableRestPlace)
                .IsRequired();
            builder.Property(p => p.SuitableRestPlaceSuburb)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.SuitableRestPlaceOther)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.WorkReduced)
                .IsRequired();
            builder.Property(p => p.WorkReducedHour)
                .IsRequired();
            builder.Property(p => p.WorkReducedMinute)
                .IsRequired();
            builder.Property(p => p.ContinuousRest)
                .IsRequired();
            builder.Property(p => p.ContinuousRestFrom);
            builder.Property(p => p.ContinuousRestTo);
            builder.Property(p => p.RestOrBreak)
                .IsRequired();
            builder.Property(p => p.RestOrBreakHour)
                .IsRequired();
            builder.Property(p => p.RestOrBreakMinute)
                .IsRequired();
            builder.Property(p => p.RestOrBreakCommencing);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceDirectionFatigue> builder);
    }
}

file[24] = Configurations\ComplianceDirectionToRectifyConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceDirectionToRectifyConfiguration : IEntityTypeConfiguration<ComplianceDirectionToRectify>
    {
        void IEntityTypeConfiguration<ComplianceDirectionToRectify>.Configure(EntityTypeBuilder<ComplianceDirectionToRectify> builder)
        {
            builder.ToTable("ComplianceDirectionToRectify");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.DescriptionOfBreach)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DirectedTo)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DirectedToLocation)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MovementCondition)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceDirectionToRectify> builder);
    }
}

file[25] = Configurations\ComplianceEducationConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceEducationConfiguration : IEntityTypeConfiguration<ComplianceEducation>
    {
        void IEntityTypeConfiguration<ComplianceEducation>.Configure(EntityTypeBuilder<ComplianceEducation> builder)
        {
            builder.ToTable("ComplianceEducation");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.Category)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.OnRoad)
                .IsRequired();
            builder.Property(p => p.TopicOfInterest)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.TimeTakenHour)
                .IsRequired();
            builder.Property(p => p.TimeTakenMinute)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceEducation> builder);
    }
}

file[26] = Configurations\ComplianceFormalCautionConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceFormalCautionConfiguration : IEntityTypeConfiguration<ComplianceFormalCaution>
    {
        void IEntityTypeConfiguration<ComplianceFormalCaution>.Configure(EntityTypeBuilder<ComplianceFormalCaution> builder)
        {
            builder.ToTable("ComplianceFormalCaution");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.DetectedSpeed)
                .IsRequired();
            builder.Property(p => p.AllegedSpeed)
                .IsRequired();
            builder.Property(p => p.PermittedSpeed)
                .IsRequired();
            builder.Property(p => p.Information)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ActionInvolvement)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Employer)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Occupation)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceFormalCaution> builder);
    }
}

file[27] = Configurations\ComplianceFormalWarningConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceFormalWarningConfiguration : IEntityTypeConfiguration<ComplianceFormalWarning>
    {
        void IEntityTypeConfiguration<ComplianceFormalWarning>.Configure(EntityTypeBuilder<ComplianceFormalWarning> builder)
        {
            builder.ToTable("ComplianceFormalWarning");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.UseTheVehicle)
                .IsRequired();
            builder.Property(p => p.PermittedTheUse)
                .IsRequired();
            builder.Property(p => p.Other)
                .IsRequired();
            builder.Property(p => p.Description)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ActionInvolvement)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceFormalWarning> builder);
    }
}

file[28] = Configurations\ComplianceInfringementConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceInfringementConfiguration : IEntityTypeConfiguration<ComplianceInfringement>
    {
        void IEntityTypeConfiguration<ComplianceInfringement>.Configure(EntityTypeBuilder<ComplianceInfringement> builder)
        {
            builder.ToTable("ComplianceInfringement");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.DetectedSpeed)
                .IsRequired();
            builder.Property(p => p.AllegedSpeed)
                .IsRequired();
            builder.Property(p => p.PermittedSpeed)
                .IsRequired();
            builder.Property(p => p.Information)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ActionInvolvement)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Employer)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Occupation)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.AssociateWeighingNotice)
                .IsRequired();
            builder.Property(p => p.VehicleOccupant)
                .IsRequired();
            builder.Property(p => p.Pplate)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceInfringement> builder);
    }
}

file[29] = Configurations\ComplianceOfficialWarningConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceOfficialWarningConfiguration : IEntityTypeConfiguration<ComplianceOfficialWarning>
    {
        void IEntityTypeConfiguration<ComplianceOfficialWarning>.Configure(EntityTypeBuilder<ComplianceOfficialWarning> builder)
        {
            builder.ToTable("ComplianceOfficialWarning");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.UseTheVehicle)
                .IsRequired();
            builder.Property(p => p.PermittedTheUse)
                .IsRequired();
            builder.Property(p => p.Other)
                .IsRequired();
            builder.Property(p => p.Description)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ActionInvolvement)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceOfficialWarning> builder);
    }
}

file[30] = Configurations\ComplianceReportForProsecutionConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceReportForProsecutionConfiguration : IEntityTypeConfiguration<ComplianceReportForProsecution>
    {
        void IEntityTypeConfiguration<ComplianceReportForProsecution>.Configure(EntityTypeBuilder<ComplianceReportForProsecution> builder)
        {
            builder.ToTable("ComplianceReportForProsecution");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.ReferenceNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceReportForProsecution> builder);
    }
}

file[31] = Configurations\ComplianceWAFormalCautionConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ComplianceWAFormalCautionConfiguration : IEntityTypeConfiguration<ComplianceWAFormalCaution>
    {
        void IEntityTypeConfiguration<ComplianceWAFormalCaution>.Configure(EntityTypeBuilder<ComplianceWAFormalCaution> builder)
        {
            builder.ToTable("ComplianceWAFormalCaution");
            builder.Property(p => p.ComplianceActionId)
                .IsRequired();
            builder.Property(p => p.UseTheVehicle)
                .IsRequired();
            builder.Property(p => p.PermittedTheUse)
                .IsRequired();
            builder.Property(p => p.Other)
                .IsRequired();
            builder.Property(p => p.Description)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ComplianceWAFormalCaution> builder);
    }
}

file[32] = Configurations\EventConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventConfiguration : IEntityTypeConfiguration<Event>
    {
        void IEntityTypeConfiguration<Event>.Configure(EntityTypeBuilder<Event> builder)
        {
            builder.ToTable("Event");
            builder.Property(p => p.CreationId);
            builder.Property(p => p.StatusId);
            builder.Property(p => p.OrganisationId);
            builder.Property(p => p.ReviewedUserId);
            builder.Property(p => p.ReviewedDateTime);
            builder.Property(p => p.CreateDate);
            builder.Property(p => p.CompletedDate);
            builder.Property(p => p.ReportedOnDate);
            builder.Property(p => p.TookPlaceStartDate);
            builder.Property(p => p.TookPlaceEndDate);
            builder.Property(p => p.VehicleReleaseDate);
            builder.Property(p => p.VehicleGrounded);
            builder.Property(p => p.OperationName)
                .HasMaxLength(255);
            builder.Property(p => p.MethodOfIntercept)
                .HasMaxLength(255);
            builder.Property(p => p.DirectionOfTravel)
                .HasMaxLength(255);
            builder.Property(p => p.Light);
            builder.Property(p => p.Siren);
            builder.Property(p => p.UrgentDutyDriving);
            builder.Property(p => p.ComplianceActionOffenceReport);
            builder.Property(p => p.ComplianceActionOffenceReportReference);
            builder.Property(p => p.Active)
                .IsRequired()
                .HasDefaultValueSql("true");
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<Event> builder);
    }
}

file[33] = Configurations\EventAddressConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventAddressConfiguration : IEntityTypeConfiguration<EventAddress>
    {
        void IEntityTypeConfiguration<EventAddress>.Configure(EntityTypeBuilder<EventAddress> builder)
        {
            builder.ToTable("EventAddress");
            builder.Property(p => p.StateId);
            builder.Property(p => p.EventAddressType);
            builder.Property(p => p.LocalGovernmentArea)
                .HasMaxLength(255);
            builder.Property(p => p.LGAShortTitle)
                .HasMaxLength(50);
            builder.Property(p => p.Near)
                .HasMaxLength(255);
            builder.Property(p => p.CommonName)
                .HasMaxLength(255);
            builder.Property(p => p.Remark)
                .HasMaxLength(255);
            builder.Property(p => p.Active)
                .IsRequired()
                .HasDefaultValueSql("true");
            builder.Property(p => p.MapDetail)
                .IsRequired();
            builder.Property(p => p.Address)
                .IsRequired();
            builder.Property(p => p.DateAdded)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventAddress> builder);
    }
}

file[34] = Configurations\EventInspectionConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventInspectionConfiguration : IEntityTypeConfiguration<EventInspection>
    {
        void IEntityTypeConfiguration<EventInspection>.Configure(EntityTypeBuilder<EventInspection> builder)
        {
            builder.ToTable("EventInspection");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.VehicleStandardsInspected)
                .IsRequired();
            builder.Property(p => p.VehicleStandardsPassed)
                .IsRequired();
            builder.Property(p => p.VehicleStandardsLevel)
                .IsRequired();
            builder.Property(p => p.VehicleStandardsEquipment)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.PermitInspected)
                .IsRequired();
            builder.Property(p => p.Permit)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassInspected)
                .IsRequired();
            builder.Property(p => p.MassGenerateWeighingNotice)
                .IsRequired();
            builder.Property(p => p.MassWeighingNoticeMediaRef)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassWeighingNoticeNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassAxleConfiguration)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassWeighingCategory)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassWeighingMethod)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassBridgeCalibratedZeroed)
                .IsRequired();
            builder.Property(p => p.MassConformingSite)
                .IsRequired();
            builder.Property(p => p.MassDriverViewedWeighing)
                .IsRequired();
            builder.Property(p => p.MassOperatorCourseOfTrade)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassDriverStatusToOwner)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassDriverInstructedBy)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassPublicTrade)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassGrossEndAndEnd)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassWitnessName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassWitnessPhoneNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassComment)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.WeighingDataStepCount)
                .IsRequired();
            builder.Property(p => p.WeighingDataExtremeAxleDistance)
                .IsRequired();
            builder.Property(p => p.WeighingDataCombinedWeight)
                .IsRequired();
            builder.Property(p => p.WeighingDataDefaultAllowedWeight)
                .IsRequired();
            builder.Property(p => p.WeighingDataAllowedWeight)
                .IsRequired();
            builder.Property(p => p.WeighingDataMassAdjustment)
                .IsRequired();
            builder.Property(p => p.WeighingDataMassAdjustmentPerStep)
                .IsRequired();
            builder.Property(p => p.WeighingDataPercentageOfAllowed)
                .IsRequired();
            builder.Property(p => p.WeighingDataPermit)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.WeighBridgeName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.WeighBridgeExpiry);
            builder.Property(p => p.WeighBridgeConfigureDate);
            builder.Property(p => p.WeighBridgeLocation)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DimensionsInspected)
                .IsRequired();
            builder.Property(p => p.DimensionsPassed)
                .IsRequired();
            builder.Property(p => p.DimensionsHeight)
                .IsRequired();
            builder.Property(p => p.DimensionsWidth)
                .IsRequired();
            builder.Property(p => p.DimensionsLength)
                .IsRequired();
            builder.Property(p => p.DimensionsRearOverhang)
                .IsRequired();
            builder.Property(p => p.DimensionsMeasuringInstrument)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DimensionsProjection)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DimensionsSingleVehicle)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LoadRestraintInspected)
                .IsRequired();
            builder.Property(p => p.LoadRestraintPassed)
                .IsRequired();
            builder.Property(p => p.LoadRestraintNote)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventInspection> builder);
    }
}

file[35] = Configurations\EventInspectionAxleGroupConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventInspectionAxleGroupConfiguration : IEntityTypeConfiguration<EventInspectionAxleGroup>
    {
        void IEntityTypeConfiguration<EventInspectionAxleGroup>.Configure(EntityTypeBuilder<EventInspectionAxleGroup> builder)
        {
            builder.ToTable("EventInspectionAxleGroup");
            builder.Property(p => p.EventInspectionId)
                .IsRequired();
            builder.Property(p => p.DefaultMassAdjustment)
                .IsRequired();
            builder.Property(p => p.MassAdjustment)
                .IsRequired();
            builder.Property(p => p.WheelCount)
                .IsRequired();
            builder.Property(p => p.CombinedWeight)
                .IsRequired();
            builder.Property(p => p.PercentageOfAllowed)
                .IsRequired();
            builder.Property(p => p.AllowedWeight)
                .IsRequired();
            builder.Property(p => p.DefaultAllowedWeight)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventInspectionAxleGroup> builder);
    }
}

file[36] = Configurations\EventInspectionAxleWeightConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventInspectionAxleWeightConfiguration : IEntityTypeConfiguration<EventInspectionAxleWeight>
    {
        void IEntityTypeConfiguration<EventInspectionAxleWeight>.Configure(EntityTypeBuilder<EventInspectionAxleWeight> builder)
        {
            builder.ToTable("EventInspectionAxleWeight");
            builder.Property(p => p.EventInspectionAxleGroupId)
                .IsRequired();
            builder.Property(p => p.AxleOffset)
                .IsRequired();
            builder.Property(p => p.OffSide)
                .IsRequired();
            builder.Property(p => p.NearSide)
                .IsRequired();
            builder.Property(p => p.CombinedWeight)
                .IsRequired();
            builder.Property(p => p.DistanceBetweenAxle)
                .IsRequired();
            builder.Property(p => p.IsCustom)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventInspectionAxleWeight> builder);
    }
}

file[37] = Configurations\EventInspectionAxleWeightPwdConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventInspectionAxleWeightPwdConfiguration : IEntityTypeConfiguration<EventInspectionAxleWeightPwd>
    {
        void IEntityTypeConfiguration<EventInspectionAxleWeightPwd>.Configure(EntityTypeBuilder<EventInspectionAxleWeightPwd> builder)
        {
            builder.ToTable("EventInspectionAxleWeightPwd");
            builder.Property(p => p.EventInspectionAxleWeightId)
                .IsRequired();
            builder.Property(p => p.Number)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Expiry);
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventInspectionAxleWeightPwd> builder);
    }
}

file[38] = Configurations\EventInspectionMovementConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventInspectionMovementConfiguration : IEntityTypeConfiguration<EventInspectionMovement>
    {
        void IEntityTypeConfiguration<EventInspectionMovement>.Configure(EntityTypeBuilder<EventInspectionMovement> builder)
        {
            builder.ToTable("EventInspectionMovement");
            builder.Property(p => p.EventInspectionId)
                .IsRequired();
            builder.Property(p => p.FoundWeight)
                .IsRequired();
            builder.Property(p => p.PercentageOfAllowed)
                .IsRequired();
            builder.Property(p => p.MassAdjustment)
                .IsRequired();
            builder.Property(p => p.AllowedWeight)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventInspectionMovement> builder);
    }
}

file[39] = Configurations\EventMediaExternalConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventMediaExternalConfiguration : IEntityTypeConfiguration<EventMediaExternal>
    {
        void IEntityTypeConfiguration<EventMediaExternal>.Configure(EntityTypeBuilder<EventMediaExternal> builder)
        {
            builder.ToTable("EventMediaExternal");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.Type)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Uri)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventMediaExternal> builder);
    }
}

file[40] = Configurations\EventMediumConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventMediumConfiguration : IEntityTypeConfiguration<EventMedium>
    {
        void IEntityTypeConfiguration<EventMedium>.Configure(EntityTypeBuilder<EventMedium> builder)
        {
            builder.ToTable("EventMedium");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.ReferenceId)
                .IsRequired();
            builder.Property(p => p.Description)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MimeType)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.FileName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.InPerson)
                .IsRequired();
            builder.Property(p => p.ThumbnailReferenceId)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventMedium> builder);
    }
}

file[41] = Configurations\EventNoteConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventNoteConfiguration : IEntityTypeConfiguration<EventNote>
    {
        void IEntityTypeConfiguration<EventNote>.Configure(EntityTypeBuilder<EventNote> builder)
        {
            builder.ToTable("EventNote");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.TextValue)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.RecordedDate);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventNote> builder);
    }
}

file[42] = Configurations\EventOfficerConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventOfficerConfiguration : IEntityTypeConfiguration<EventOfficer>
    {
        void IEntityTypeConfiguration<EventOfficer>.Configure(EntityTypeBuilder<EventOfficer> builder)
        {
            builder.ToTable("EventOfficer");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.UserId)
                .IsRequired();
            builder.Property(p => p.EventOfficerTypeId)
                .IsRequired();
            builder.Property(p => p.HomeStation)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.AuthorityNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.FirstName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Surname)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventOfficer> builder);
    }
}

file[43] = Configurations\EventOrganisationConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventOrganisationConfiguration : IEntityTypeConfiguration<EventOrganisation>
    {
        void IEntityTypeConfiguration<EventOrganisation>.Configure(EntityTypeBuilder<EventOrganisation> builder)
        {
            builder.ToTable("EventOrganisation");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.OrganisationId)
                .IsRequired();
            builder.Property(p => p.EventOrganisationTypeId)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventOrganisation> builder);
    }
}

file[44] = Configurations\EventPersonConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventPersonConfiguration : IEntityTypeConfiguration<EventPerson>
    {
        void IEntityTypeConfiguration<EventPerson>.Configure(EntityTypeBuilder<EventPerson> builder)
        {
            builder.ToTable("EventPerson");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.PersonId)
                .IsRequired();
            builder.Property(p => p.EventPersonTypeId)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventPerson> builder);
    }
}

file[45] = Configurations\EventPersonDiaryConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventPersonDiaryConfiguration : IEntityTypeConfiguration<EventPersonDiary>
    {
        void IEntityTypeConfiguration<EventPersonDiary>.Configure(EntityTypeBuilder<EventPersonDiary> builder)
        {
            builder.ToTable("EventPersonDiary");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.PersonId)
                .IsRequired();
            builder.Property(p => p.Presented)
                .IsRequired();
            builder.Property(p => p.OtherReason)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Other)
                .IsRequired();
            builder.Property(p => p.LessThan100km)
                .IsRequired();
            builder.Property(p => p.LessThan160km)
                .IsRequired();
            builder.Property(p => p.LessThan12ton)
                .IsRequired();
            builder.Property(p => p.Type)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.BookNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.PageNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.StateId)
                .IsRequired();
            builder.Property(p => p.IssueDate);
            builder.Property(p => p.ElectronicId)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventPersonDiary> builder);
    }
}

file[46] = Configurations\EventPersonFatigueConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventPersonFatigueConfiguration : IEntityTypeConfiguration<EventPersonFatigue>
    {
        void IEntityTypeConfiguration<EventPersonFatigue>.Configure(EntityTypeBuilder<EventPersonFatigue> builder)
        {
            builder.ToTable("EventPersonFatigue");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.PersonId)
                .IsRequired();
            builder.Property(p => p.Regulated)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.AppearFatigued)
                .IsRequired();
            builder.Property(p => p.DriverHomeLocation)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.RecordKeeperName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.RecordKeeperLocation)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.AccreditationNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Scheduler)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventPersonFatigue> builder);
    }
}

file[47] = Configurations\EventVehicleConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventVehicleConfiguration : IEntityTypeConfiguration<EventVehicle>
    {
        void IEntityTypeConfiguration<EventVehicle>.Configure(EntityTypeBuilder<EventVehicle> builder)
        {
            builder.ToTable("EventVehicle");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.VehicleId)
                .IsRequired();
            builder.Property(p => p.EventVehicleTypeId)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventVehicle> builder);
    }
}

file[48] = Configurations\EventVehicleConcessionConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventVehicleConcessionConfiguration : IEntityTypeConfiguration<EventVehicleConcession>
    {
        void IEntityTypeConfiguration<EventVehicleConcession>.Configure(EntityTypeBuilder<EventVehicleConcession> builder)
        {
            builder.ToTable("EventVehicleConcession");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.VehicleId)
                .IsRequired();
            builder.Property(p => p.Code)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Description)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventVehicleConcession> builder);
    }
}

file[49] = Configurations\EventVehicleConditionConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventVehicleConditionConfiguration : IEntityTypeConfiguration<EventVehicleCondition>
    {
        void IEntityTypeConfiguration<EventVehicleCondition>.Configure(EntityTypeBuilder<EventVehicleCondition> builder)
        {
            builder.ToTable("EventVehicleCondition");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.VehicleId)
                .IsRequired();
            builder.Property(p => p.Type)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Description)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventVehicleCondition> builder);
    }
}

file[50] = Configurations\EventVehicleSchemeConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class EventVehicleSchemeConfiguration : IEntityTypeConfiguration<EventVehicleScheme>
    {
        void IEntityTypeConfiguration<EventVehicleScheme>.Configure(EntityTypeBuilder<EventVehicleScheme> builder)
        {
            builder.ToTable("EventVehicleScheme");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.VehicleId)
                .IsRequired();
            builder.Property(p => p.Module)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Number)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ExpiryDate);
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<EventVehicleScheme> builder);
    }
}

file[51] = Configurations\InterceptConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class InterceptConfiguration : IEntityTypeConfiguration<Intercept>
    {
        void IEntityTypeConfiguration<Intercept>.Configure(EntityTypeBuilder<Intercept> builder)
        {
            builder.ToTable("Intercept");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.InterceptNumber)
                .IsRequired()
                .HasMaxLength(128);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<Intercept> builder);
    }
}

file[52] = Configurations\InterceptImportConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class InterceptImportConfiguration : IEntityTypeConfiguration<InterceptImport>
    {
        void IEntityTypeConfiguration<InterceptImport>.Configure(EntityTypeBuilder<InterceptImport> builder)
        {
            builder.ToTable("InterceptImport");
            builder.Property(p => p.VehicleRegistrationStateId)
                .IsRequired();
            builder.Property(p => p.VehicleRegistrationNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.PersonGivenName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.PersonFamilyName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.PersonDateOfBirth);
            builder.Property(p => p.PersonLicenceNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.PersonLicenceStateId)
                .IsRequired();
            builder.Property(p => p.OrganisationAcn)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.OrganisationIncorporatedNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.InterceptNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DateIssued);
            builder.Property(p => p.StateId)
                .IsRequired();
            builder.Property(p => p.VehicleInfo)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.NoticesDescription)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.HasNotice)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<InterceptImport> builder);
    }
}

file[53] = Configurations\InterceptJourneyConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class InterceptJourneyConfiguration : IEntityTypeConfiguration<InterceptJourney>
    {
        void IEntityTypeConfiguration<InterceptJourney>.Configure(EntityTypeBuilder<InterceptJourney> builder)
        {
            builder.ToTable("InterceptJourney");
            builder.Property(p => p.InterceptId)
                .IsRequired();
            builder.Property(p => p.IndustrySector)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.StartingLocation)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.EndLocation)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Consignor)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ConsignorLocation)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Loader)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LoaderLocation)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Consignee)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ConsigneeLocation)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.PhotosProvided)
                .IsRequired();
            builder.Property(p => p.DriverEmployer)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LoadedGood)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LoadedOther)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Odometer)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<InterceptJourney> builder);
    }
}

file[54] = Configurations\InterceptOrganisationConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class InterceptOrganisationConfiguration : IEntityTypeConfiguration<InterceptOrganisation>
    {
        void IEntityTypeConfiguration<InterceptOrganisation>.Configure(EntityTypeBuilder<InterceptOrganisation> builder)
        {
            builder.ToTable("InterceptOrganisation");
            builder.Property(p => p.InterceptId)
                .IsRequired();
            builder.Property(p => p.OrganisationId)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<InterceptOrganisation> builder);
    }
}

file[55] = Configurations\InterceptPersonConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class InterceptPersonConfiguration : IEntityTypeConfiguration<InterceptPerson>
    {
        void IEntityTypeConfiguration<InterceptPerson>.Configure(EntityTypeBuilder<InterceptPerson> builder)
        {
            builder.ToTable("InterceptPerson");
            builder.Property(p => p.InterceptId)
                .IsRequired();
            builder.Property(p => p.PersonId)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<InterceptPerson> builder);
    }
}

file[56] = Configurations\InterceptVehicleConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class InterceptVehicleConfiguration : IEntityTypeConfiguration<InterceptVehicle>
    {
        void IEntityTypeConfiguration<InterceptVehicle>.Configure(EntityTypeBuilder<InterceptVehicle> builder)
        {
            builder.ToTable("InterceptVehicle");
            builder.Property(p => p.InterceptId)
                .IsRequired();
            builder.Property(p => p.VehicleId)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<InterceptVehicle> builder);
    }
}

file[57] = Configurations\LogConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class LogConfiguration : IEntityTypeConfiguration<Log>
    {
        void IEntityTypeConfiguration<Log>.Configure(EntityTypeBuilder<Log> builder)
        {
            builder.ToTable("Log");
            builder.Property(p => p.LogTypeId)
                .IsRequired();
            builder.Property(p => p.LogLevelTypeId)
                .IsRequired();
            builder.Property(p => p.LogComponentTypeId)
                .IsRequired();
            builder.Property(p => p.UserId)
                .IsRequired();
            builder.Property(p => p.SignInName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.OrganisationId)
                .IsRequired();
            builder.Property(p => p.Source)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.EventDate);
            builder.Property(p => p.DeviceId)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Message)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Exception)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.RequestId)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.RequestBody)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ResponseBody)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Duration)
                .IsRequired();
            builder.Property(p => p.ClientVersion)
                .IsRequired()
                .HasMaxLength(128);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<Log> builder);
    }
}

file[58] = Configurations\MapDetailConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class MapDetailConfiguration : IEntityTypeConfiguration<MapDetail>
    {
        void IEntityTypeConfiguration<MapDetail>.Configure(EntityTypeBuilder<MapDetail> builder)
        {
            builder.ToTable("MapDetail");
            builder.Property(p => p.Altitude);
            builder.Property(p => p.AltitudeAccuracy);
            builder.Property(p => p.HorizontalAccuracy);
            builder.Property(p => p.Longitude);
            builder.Property(p => p.Latitude);
            builder.Property(p => p.Elevation);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<MapDetail> builder);
    }
}

file[59] = Configurations\NoticeNumberConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class NoticeNumberConfiguration : IEntityTypeConfiguration<NoticeNumber>
    {
        void IEntityTypeConfiguration<NoticeNumber>.Configure(EntityTypeBuilder<NoticeNumber> builder)
        {
            builder.ToTable("NoticeNumber");
            builder.Property(p => p.StateId)
                .IsRequired();
            builder.Property(p => p.NoticeTypeId)
                .IsRequired();
            builder.Property(p => p.Description)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.StartSequenceNumber)
                .IsRequired();
            builder.Property(p => p.LastSequenceNumber)
                .IsRequired();
            builder.Property(p => p.NumberFormat)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.PerCallAllocation)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<NoticeNumber> builder);
    }
}

file[60] = Configurations\OrganisationConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class OrganisationConfiguration : IEntityTypeConfiguration<Organisation>
    {
        void IEntityTypeConfiguration<Organisation>.Configure(EntityTypeBuilder<Organisation> builder)
        {
            builder.ToTable("Organisation");
            builder.Property(p => p.CreationId);
            builder.Property(p => p.Name)
                .IsRequired()
                .HasMaxLength(255);
            builder.Property(p => p.ACN)
                .IsRequired()
                .HasMaxLength(255);
            builder.Property(p => p.TypeId)
                .IsRequired();
            builder.Property(p => p.NevdisId)
                .HasMaxLength(255);
            builder.Property(p => p.VicCustomerNo)
                .HasMaxLength(255);
            builder.Property(p => p.ParentId);
            builder.Property(p => p.Active)
                .IsRequired()
                .HasDefaultValueSql("true");
            builder.Property(p => p.SystemId)
                .IsRequired()
                .HasDefaultValueSql("30");
            builder.HasIndex(i => i.ACN)                .IsUnique()                .IsClustered();             OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<Organisation> builder);
    }
}

file[61] = Configurations\OrganisationAddressConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class OrganisationAddressConfiguration : IEntityTypeConfiguration<OrganisationAddress>
    {
        void IEntityTypeConfiguration<OrganisationAddress>.Configure(EntityTypeBuilder<OrganisationAddress> builder)
        {
            builder.ToTable("OrganisationAddress");
            builder.Property(p => p.OrganisationId)
                .IsRequired();
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.AddressTypeId)
                .IsRequired();
            builder.Property(p => p.LocalGovernmentArea)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LgashortTitle)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Near)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.CommonName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Remark)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.StateId)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.Source)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MapDetail)
                .IsRequired();
            builder.Property(p => p.Address)
                .IsRequired();
            builder.Property(p => p.DateAdded);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<OrganisationAddress> builder);
    }
}

file[62] = Configurations\OrganisationContactConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class OrganisationContactConfiguration : IEntityTypeConfiguration<OrganisationContact>
    {
        void IEntityTypeConfiguration<OrganisationContact>.Configure(EntityTypeBuilder<OrganisationContact> builder)
        {
            builder.ToTable("OrganisationContact");
            builder.Property(p => p.OrganisationId)
                .IsRequired();
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.ContactTypeId)
                .IsRequired();
            builder.Property(p => p.ContactValue)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DateAdded);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.Source)
                .IsRequired()
                .HasMaxLength(128);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<OrganisationContact> builder);
    }
}

file[63] = Configurations\OrganisationDetailConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class OrganisationDetailConfiguration : IEntityTypeConfiguration<OrganisationDetail>
    {
        void IEntityTypeConfiguration<OrganisationDetail>.Configure(EntityTypeBuilder<OrganisationDetail> builder)
        {
            builder.ToTable("OrganisationDetail");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.OrganisationId)
                .IsRequired();
            builder.Property(p => p.Name)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Acn)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.IncorporatedNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.TypeId)
                .IsRequired();
            builder.Property(p => p.StateId)
                .IsRequired();
            builder.Property(p => p.Status)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DateOfRegistration);
            builder.Property(p => p.AlertLevel)
                .IsRequired();
            builder.Property(p => p.AssociatedAlertLevel)
                .IsRequired();
            builder.Property(p => p.Source)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<OrganisationDetail> builder);
    }
}

file[64] = Configurations\PersonConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class PersonConfiguration : IEntityTypeConfiguration<Person>
    {
        void IEntityTypeConfiguration<Person>.Configure(EntityTypeBuilder<Person> builder)
        {
            builder.ToTable("Person");
            builder.Property(p => p.CreationId);
            builder.Property(p => p.GivenName)
                .IsRequired()
                .HasMaxLength(255);
            builder.Property(p => p.FamilyName)
                .IsRequired()
                .HasMaxLength(255);
            builder.Property(p => p.DateOfBirth)
                .IsRequired();
            builder.Property(p => p.LicenceNumber)
                .HasMaxLength(255);
            builder.Property(p => p.LicenceState)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired()
                .HasDefaultValueSql("30");
            builder.Property(p => p.Active)
                .IsRequired()
                .HasDefaultValueSql("true");
            builder.Property(p => p.SourcePersonId)
                .HasMaxLength(64);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<Person> builder);
    }
}

file[65] = Configurations\PersonAddressConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class PersonAddressConfiguration : IEntityTypeConfiguration<PersonAddress>
    {
        void IEntityTypeConfiguration<PersonAddress>.Configure(EntityTypeBuilder<PersonAddress> builder)
        {
            builder.ToTable("PersonAddress");
            builder.Property(p => p.PersonId)
                .IsRequired();
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.StateId)
                .IsRequired();
            builder.Property(p => p.AddressTypeId)
                .IsRequired();
            builder.Property(p => p.LocalGovernmentArea)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LgashortTitle)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Near)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.CommonName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Remark)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.Source)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MapDetail)
                .IsRequired();
            builder.Property(p => p.Address)
                .IsRequired();
            builder.Property(p => p.DateAdded);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<PersonAddress> builder);
    }
}

file[66] = Configurations\PersonContactConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class PersonContactConfiguration : IEntityTypeConfiguration<PersonContact>
    {
        void IEntityTypeConfiguration<PersonContact>.Configure(EntityTypeBuilder<PersonContact> builder)
        {
            builder.ToTable("PersonContact");
            builder.Property(p => p.PersonId)
                .IsRequired();
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.ContactTypeId)
                .IsRequired();
            builder.Property(p => p.ContactValue)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DateAdded);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.Source)
                .IsRequired()
                .HasMaxLength(128);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<PersonContact> builder);
    }
}

file[67] = Configurations\PersonDetailConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class PersonDetailConfiguration : IEntityTypeConfiguration<PersonDetail>
    {
        void IEntityTypeConfiguration<PersonDetail>.Configure(EntityTypeBuilder<PersonDetail> builder)
        {
            builder.ToTable("PersonDetail");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.PersonId)
                .IsRequired();
            builder.Property(p => p.GivenName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.FamilyName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DateOfBirth);
            builder.Property(p => p.MiddleName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Gender)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.AlertLevel)
                .IsRequired();
            builder.Property(p => p.AssociatedAlertLevel)
                .IsRequired();
            builder.Property(p => p.Source)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LicenceType)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LicenceNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LicenceClass)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LicenceCondition)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LicenceProduced)
                .IsRequired();
            builder.Property(p => p.LicenceEffective);
            builder.Property(p => p.LicenceExpiry);
            builder.Property(p => p.LicenceStatus)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LicenceStateId)
                .IsRequired();
            builder.Property(p => p.InternationalLicence)
                .IsRequired();
            builder.Property(p => p.Jurisdiction)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ProfileImageUrl)
                .IsRequired()
                .HasMaxLength(128);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<PersonDetail> builder);
    }
}

file[68] = Configurations\PostcodeConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class PostcodeConfiguration : IEntityTypeConfiguration<Postcode>
    {
        void IEntityTypeConfiguration<Postcode>.Configure(EntityTypeBuilder<Postcode> builder)
        {
            builder.ToTable("Postcode");
            builder.Property(p => p.SourceId)
                .IsRequired();
            builder.Property(p => p.Postcode1)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Locality)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.State)
                .IsRequired()
                .HasMaxLength(128);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<Postcode> builder);
    }
}

file[69] = Configurations\ReferenceDatumConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ReferenceDatumConfiguration : IEntityTypeConfiguration<ReferenceDatum>
    {
        void IEntityTypeConfiguration<ReferenceDatum>.Configure(EntityTypeBuilder<ReferenceDatum> builder)
        {
            builder.ToTable("ReferenceDatum");
            builder.Property(p => p.CategoryId)
                .IsRequired();
            builder.Property(p => p.Code)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Name)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Description)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.EffectFrom);
            builder.Property(p => p.EffectTo);
            builder.Property(p => p.SortOrder)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ReferenceDatum> builder);
    }
}

file[70] = Configurations\ReferenceDataAttributeConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ReferenceDataAttributeConfiguration : IEntityTypeConfiguration<ReferenceDataAttribute>
    {
        void IEntityTypeConfiguration<ReferenceDataAttribute>.Configure(EntityTypeBuilder<ReferenceDataAttribute> builder)
        {
            builder.ToTable("ReferenceDataAttribute");
            builder.Property(p => p.ReferenceDataId)
                .IsRequired();
            builder.Property(p => p.Name)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Value)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ReferenceDataAttribute> builder);
    }
}

file[71] = Configurations\ReferenceDataCategoryConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ReferenceDataCategoryConfiguration : IEntityTypeConfiguration<ReferenceDataCategory>
    {
        void IEntityTypeConfiguration<ReferenceDataCategory>.Configure(EntityTypeBuilder<ReferenceDataCategory> builder)
        {
            builder.ToTable("ReferenceDataCategory");
            builder.Property(p => p.Code)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Name)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Description)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.SortOrder)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            builder.Property(p => p.SystemUse)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ReferenceDataCategory> builder);
    }
}

file[72] = Configurations\ReferenceDataMappingConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ReferenceDataMappingConfiguration : IEntityTypeConfiguration<ReferenceDataMapping>
    {
        void IEntityTypeConfiguration<ReferenceDataMapping>.Configure(EntityTypeBuilder<ReferenceDataMapping> builder)
        {
            builder.ToTable("ReferenceDataMapping");
            builder.Property(p => p.ReferenceDataId)
                .IsRequired();
            builder.Property(p => p.ReferenceDataCategoryId)
                .IsRequired();
            builder.Property(p => p.SourceValue)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ReferenceDataMapping> builder);
    }
}

file[73] = Configurations\ShiftConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ShiftConfiguration : IEntityTypeConfiguration<Shift>
    {
        void IEntityTypeConfiguration<Shift>.Configure(EntityTypeBuilder<Shift> builder)
        {
            builder.ToTable("Shift");
            builder.Property(p => p.StartTime)
                .IsRequired();
            builder.Property(p => p.EndTime);
            builder.Property(p => p.EstimatedEndTime);
            builder.Property(p => p.Operation)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Remark)
                .IsRequired()
                .HasMaxLength(128);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<Shift> builder);
    }
}

file[74] = Configurations\ShiftOfficerConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class ShiftOfficerConfiguration : IEntityTypeConfiguration<ShiftOfficer>
    {
        void IEntityTypeConfiguration<ShiftOfficer>.Configure(EntityTypeBuilder<ShiftOfficer> builder)
        {
            builder.ToTable("ShiftOfficer");
            builder.Property(p => p.ShiftId)
                .IsRequired();
            builder.Property(p => p.UserId)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<ShiftOfficer> builder);
    }
}

file[75] = Configurations\UserConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class UserConfiguration : IEntityTypeConfiguration<User>
    {
        void IEntityTypeConfiguration<User>.Configure(EntityTypeBuilder<User> builder)
        {
            builder.ToTable("User");
            builder.Property(p => p.SignInName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.FirstName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Surname)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.UserOrganisation)
                .IsRequired();
            builder.Property(p => p.PrimaryRole)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ActingRole)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.ActingFrom);
            builder.Property(p => p.ActingTo);
            builder.Property(p => p.IsAdmin)
                .IsRequired();
            builder.Property(p => p.ManageBasicManifest)
                .IsRequired();
            builder.Property(p => p.ManageAdvancedManifest)
                .IsRequired();
            builder.Property(p => p.EffectFrom);
            builder.Property(p => p.EffectTo);
            builder.Property(p => p.AuthorityNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.HomeStation)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Region)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Team)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<User> builder);
    }
}

file[76] = Configurations\VehicleConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class VehicleConfiguration : IEntityTypeConfiguration<Vehicle>
    {
        void IEntityTypeConfiguration<Vehicle>.Configure(EntityTypeBuilder<Vehicle> builder)
        {
            builder.ToTable("Vehicle");
            builder.Property(p => p.CreationId);
            builder.Property(p => p.RegistrationState);
            builder.Property(p => p.RegistrationNumber)
                .HasMaxLength(10);
            builder.Property(p => p.IsNationalRegistration)
                .IsRequired();
            builder.Property(p => p.VehicleIdentificationNumber)
                .HasMaxLength(20);
            builder.Property(p => p.EngineNumber)
                .HasMaxLength(20);
            builder.Property(p => p.ChassisNumber)
                .HasMaxLength(32);
            builder.Property(p => p.SourceVehicleId)
                .IsRequired()
                .HasMaxLength(64);
            builder.Property(p => p.SystemId)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired()
                .HasDefaultValueSql("true");
            builder.HasIndex(i => i.CreationId)                .IsUnique()                .IsClustered();             OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<Vehicle> builder);
    }
}

file[77] = Configurations\VehicleDetailConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class VehicleDetailConfiguration : IEntityTypeConfiguration<VehicleDetail>
    {
        void IEntityTypeConfiguration<VehicleDetail>.Configure(EntityTypeBuilder<VehicleDetail> builder)
        {
            builder.ToTable("VehicleDetail");
            builder.Property(p => p.VehicleIdentificationNumber)
                .HasMaxLength(20);
            builder.Property(p => p.EngineNumber)
                .HasMaxLength(20);
            builder.Property(p => p.ChassisNumber)
                .HasMaxLength(32);
            builder.Property(p => p.RegistrationState);
            builder.Property(p => p.RegistrationNumber)
                .HasMaxLength(10);
            builder.Property(p => p.RegistrationStatus)
                .HasMaxLength(64);
            builder.Property(p => p.IsNationalRegistration)
                .IsRequired();
            builder.Property(p => p.SourceVehicleId)
                .IsRequired()
                .HasMaxLength(64);
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<VehicleDetail> builder);
    }
}

file[78] = Configurations\VehicleFootprintConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class VehicleFootprintConfiguration : IEntityTypeConfiguration<VehicleFootprint>
    {
        void IEntityTypeConfiguration<VehicleFootprint>.Configure(EntityTypeBuilder<VehicleFootprint> builder)
        {
            builder.ToTable("VehicleFootprint");
            builder.Property(p => p.Latitude)
                .IsRequired();
            builder.Property(p => p.Longitude)
                .IsRequired();
            builder.Property(p => p.Direction)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.SampleTakenOn);
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.VehicleId)
                .IsRequired();
            builder.Property(p => p.SourceType)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.SourceReference)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            builder.Property(p => p.StateId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<VehicleFootprint> builder);
    }
}

file[79] = Configurations\VehicleFootprintImportConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class VehicleFootprintImportConfiguration : IEntityTypeConfiguration<VehicleFootprintImport>
    {
        void IEntityTypeConfiguration<VehicleFootprintImport>.Configure(EntityTypeBuilder<VehicleFootprintImport> builder)
        {
            builder.ToTable("VehicleFootprintImport");
            builder.Property(p => p.Latitude)
                .IsRequired();
            builder.Property(p => p.Longitude)
                .IsRequired();
            builder.Property(p => p.Direction)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.SampleTakenOn);
            builder.Property(p => p.StateId)
                .IsRequired();
            builder.Property(p => p.FullAddress)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.VehicleRegistrationStateId)
                .IsRequired();
            builder.Property(p => p.VehicleRegistrationNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.SourceType)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.SourceReference)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.SourceRecordId)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.Active)
                .IsRequired();
            builder.Property(p => p.SystemId)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<VehicleFootprintImport> builder);
    }
}

file[80] = Configurations\VehicleOrganisationConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class VehicleOrganisationConfiguration : IEntityTypeConfiguration<VehicleOrganisation>
    {
        void IEntityTypeConfiguration<VehicleOrganisation>.Configure(EntityTypeBuilder<VehicleOrganisation> builder)
        {
            builder.ToTable("VehicleOrganisation");
            builder.Property(p => p.OrganisationId)
                .IsRequired();
            builder.Property(p => p.VehicleId)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<VehicleOrganisation> builder);
    }
}

file[81] = Configurations\VehiclePersonConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class VehiclePersonConfiguration : IEntityTypeConfiguration<VehiclePerson>
    {
        void IEntityTypeConfiguration<VehiclePerson>.Configure(EntityTypeBuilder<VehiclePerson> builder)
        {
            builder.ToTable("VehiclePerson");
            builder.Property(p => p.PersonId)
                .IsRequired();
            builder.Property(p => p.VehicleId)
                .IsRequired();
            builder.Property(p => p.Active)
                .IsRequired();
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<VehiclePerson> builder);
    }
}

file[82] = Configurations\WAEventInspectionConfiguration.cs
namespace Nhvr.Rcms.Data.Configurations
{
    public partial class WAEventInspectionConfiguration : IEntityTypeConfiguration<WAEventInspection>
    {
        void IEntityTypeConfiguration<WAEventInspection>.Configure(EntityTypeBuilder<WAEventInspection> builder)
        {
            builder.ToTable("WAEventInspection");
            builder.Property(p => p.EventId)
                .IsRequired();
            builder.Property(p => p.WainterceptId)
                .IsRequired();
            builder.Property(p => p.DangerousGoodsInspected)
                .IsRequired();
            builder.Property(p => p.DangerousGoodsHardCopy)
                .IsRequired();
            builder.Property(p => p.DangerousGoodsJuroEntry)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DangerousGoodsClassOrDivisionOfDg)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DangerousGoodsProduct)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DangerousGoodsLoadDescriptor)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DangerousGoodsPrimeContractorName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DangerousGoodsPrimeContractorAddress)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DangerousGoodsPrimeContractorPhone)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DangerousGoodsConsignorName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DangerousGoodsConsignorAddress)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DangerousGoodsConsignorPhone)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DangerousGoodsInspectionType)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DangerousGoodsRemediationNoticeIssued)
                .IsRequired();
            builder.Property(p => p.DangerousGoodsRemediationNoticeNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DangerousGoodsPhotosAttached)
                .IsRequired();
            builder.Property(p => p.DangerousGoodsComment)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DangerousGoodsMediaRef)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.VehicleStandardsInspected)
                .IsRequired();
            builder.Property(p => p.VehicleStandardsPassed)
                .IsRequired();
            builder.Property(p => p.VehicleStandardsEquipment)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassInspected)
                .IsRequired();
            builder.Property(p => p.MassWeighingNoticeMediaRef)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassWeighingNoticeNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassAxleConfiguration)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassWeighingCategory)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassWeighingMethod)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassBridgeCalibratedZeroed)
                .IsRequired();
            builder.Property(p => p.MassConformingSite)
                .IsRequired();
            builder.Property(p => p.MassDriverViewedWeighing)
                .IsRequired();
            builder.Property(p => p.MassOperatorCourseOfTrade)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassDriverStatusToOwner)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassDriverInstructedBy)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassPublicTrade)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassGrossEndAndEnd)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassWitnessName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassWitnessPhoneNumber)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.MassComment)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.WeighingDataStepCount)
                .IsRequired();
            builder.Property(p => p.WeighingDataExtremeAxleDistance)
                .IsRequired();
            builder.Property(p => p.WeighingDataCombinedWeight)
                .IsRequired();
            builder.Property(p => p.WeighingDataDefaultAllowedWeight)
                .IsRequired();
            builder.Property(p => p.WeighingDataAllowedWeight)
                .IsRequired();
            builder.Property(p => p.WeighingDataMassAdjustment)
                .IsRequired();
            builder.Property(p => p.WeighingDataMassAdjustmentPerStep)
                .IsRequired();
            builder.Property(p => p.WeighingDataPercentageOfAllowed)
                .IsRequired();
            builder.Property(p => p.WeighingDataPermit)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.WeighBridgeName)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.WeighBridgeExpiry);
            builder.Property(p => p.WeighBridgeConfigureDate);
            builder.Property(p => p.WeighBridgeLocation)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DimensionsInspected)
                .IsRequired();
            builder.Property(p => p.DimensionsPassed)
                .IsRequired();
            builder.Property(p => p.DimensionsHeight)
                .IsRequired();
            builder.Property(p => p.DimensionsWidth)
                .IsRequired();
            builder.Property(p => p.DimensionsLength)
                .IsRequired();
            builder.Property(p => p.DimensionsRearOverhang)
                .IsRequired();
            builder.Property(p => p.DimensionsProjection)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.DimensionsOtherDimension)
                .IsRequired()
                .HasMaxLength(128);
            builder.Property(p => p.LoadRestraintInspected)
                .IsRequired();
            builder.Property(p => p.LoadRestraintPassed)
                .IsRequired();
            builder.Property(p => p.LoadRestraintNote)
                .IsRequired()
                .HasMaxLength(128);
            OnConfigurePartial(builder);
        }
        partial void OnConfigurePartial(EntityTypeBuilder<WAEventInspection> builder);
    }
}

file[83] = Models\ActivityLog.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ActivityLog
    {
        public int Id { get; private set; }

        public bool Active { get; private set; }

        public string ActivityType { get; private set; }

        public int EventId { get; private set; }

        public bool IsManualEntry { get; private set; }

        public DateTimeOffset? StartDate { get; private set; }

        public DateTimeOffset? EndDate { get; private set; }

        public DateTimeOffset? DateAdded { get; private set; }

        public bool Light { get; private set; }

        public bool Siren { get; private set; }

        public bool UrgentDutyDriving { get; private set; }

        public string Remark { get; private set; }

        public int ShiftId { get; private set; }

        public int UserId { get; private set; }

    }
}

file[84] = Models\AddressBook.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class AddressBook
    {
        public int Id { get; private set; }

        public string? FloorNumber { get; private set; }

        public string? UnitType { get; private set; }

        public string? UnitNumber { get; private set; }

        public string StreetName { get; private set; }

        public string StreetType { get; private set; }

        public string StreetSuffix { get; private set; }

        public string? StreetNumberFirst { get; private set; }

        public string? StreetNumberFirstPrefix { get; private set; }

        public string? StreetNumberFirstSuffix { get; private set; }

        public string? StreetNumberLast { get; private set; }

        public string? StreetNumberLastPrefix { get; private set; }

        public string? StreetNumberLastSuffix { get; private set; }

        public string? StreetDirectional { get; private set; }

        public string? PostalContainer { get; private set; }

        public string PostalCode { get; private set; }

        public string Suburb { get; private set; }

        public string Country { get; private set; }

        public string FullAddress { get; private set; }

    }
}

file[85] = Models\Alert.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class Alert
    {
        public int Id { get; private set; }

        public bool Active { get; private set; }

        public DateTimeOffset? EffectFrom { get; private set; }

        public DateTimeOffset? EffectTo { get; private set; }

        public int Level { get; private set; }

        public string Title { get; private set; }

        public string Remark { get; private set; }

        public string ReasonForDeletion { get; private set; }

        public bool Silent { get; private set; }

        public int SilentNotifyContactId { get; private set; }

        public int PersonId { get; private set; }

        public int VehicleId { get; private set; }

        public int OrganisationId { get; private set; }

        public int UserId { get; private set; }

        public int SystemId { get; private set; }

        public bool IsManualEntry { get; private set; }

    }
}

file[86] = Models\AzureSqlMaintenanceLog.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class AzureSqlMaintenanceLog
    {
        public long Id { get; private set; }

        public DateTimeOffset? OperationTime { get; private set; }

        public string Command { get; private set; }

        public string? ExtraInfo { get; private set; }

        public DateTimeOffset? StartTime { get; private set; }

        public DateTimeOffset? EndTime { get; private set; }

        public string? StatusMessage { get; private set; }

    }
}

file[87] = Models\BatchProcess.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class BatchProcess
    {
        public int Id { get; private set; }

        public string Url { get; private set; }

        public int StatusId { get; private set; }

        public DateTimeOffset? StartedOn { get; private set; }

        public DateTimeOffset? StoppedOn { get; private set; }

    }
}

file[88] = Models\BatchProcessTask.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class BatchProcessTask
    {
        public int Id { get; private set; }

        public int TypeId { get; private set; }

        public int StatusId { get; private set; }

        public int EntityId { get; private set; }

        public int EntityTypeId { get; private set; }

        public int BatchProcessId { get; private set; }

        public string ResultMessage { get; private set; }

        public DateTimeOffset? StartedOn { get; private set; }

        public DateTimeOffset? StoppedOn { get; private set; }

    }
}

file[89] = Models\BatchProcessTaskItem.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class BatchProcessTaskItem
    {
        public int Id { get; private set; }

        public int TaskId { get; private set; }

        public int StatusId { get; private set; }

        public int EntityId { get; private set; }

        public int EntityTypeId { get; private set; }

        public string Reference { get; private set; }

        public string ResultMessage { get; private set; }

    }
}

file[90] = Models\ComplianceAction.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceAction
    {
        public int Id { get; private set; }

        public int TypeId { get; private set; }

        public string? NoticeNumber { get; private set; }

        public int EventId { get; private set; }

        public int? MediaId { get; private set; }

        public int? VehicleId { get; private set; }

        public int? PersonId { get; private set; }

        public int? OrganisationId { get; private set; }

        public DateTimeOffset DateIssued { get; private set; }

        public DateTimeOffset? NoticeIssuedDate { get; private set; }

        public int? StateId { get; private set; }

        public string? JuroEntry { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[91] = Models\ComplianceActionImport.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceActionImport
    {
        public int Id { get; private set; }

        public int VehicleRegistrationStateId { get; private set; }

        public string VehicleRegistrationNumber { get; private set; }

        public string PersonGivenName { get; private set; }

        public string PersonFamilyName { get; private set; }

        public DateTimeOffset? PersonDateOfBirth { get; private set; }

        public string PersonLicenceNumber { get; private set; }

        public int PersonLicenceStateId { get; private set; }

        public string OrganisationAcn { get; private set; }

        public string OrganisationIncorporatedNumber { get; private set; }

        public int TypeId { get; private set; }

        public DateTimeOffset DateIssued { get; private set; }

        public DateTimeOffset? DateCleared { get; private set; }

        public string NoticeNumber { get; private set; }

        public string Line1 { get; private set; }

        public string Line2 { get; private set; }

        public string Line3 { get; private set; }

        public string Line4 { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[92] = Models\ComplianceActionLocation.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceActionLocation
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public int StateId { get; private set; }

        public string LocalGovernmentArea { get; private set; }

        public string LgashortTitle { get; private set; }

        public string Near { get; private set; }

        public string CommonName { get; private set; }

        public string Remark { get; private set; }

        public bool Active { get; private set; }

        public MapDetail MapDetail { get; private set; }

        public AddressBook Address { get; private set; }

        public DateTimeOffset? DateAdded { get; private set; }

    }
}

file[93] = Models\ComplianceActionOffence.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceActionOffence
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public string Category { get; private set; }

        public DateTimeOffset? EffectiveDate { get; private set; }

        public DateTimeOffset? ExpiryDate { get; private set; }

        public string ShortTitle { get; private set; }

        public string Title { get; private set; }

        public decimal SortOrder { get; private set; }

        public int DemeritPoint { get; private set; }

        public int SuspensionPeriod { get; private set; }

        public decimal Fine { get; private set; }

        public string ReportingCategory { get; private set; }

        public string LegislationReference { get; private set; }

        public string PenaltyDescription { get; private set; }

        public string InfringementCategory { get; private set; }

        public string InfringementIssueCategory { get; private set; }

        public string LongDescription { get; private set; }

        public decimal Levy { get; private set; }

        public string Code { get; private set; }

        public string SourceManifestId { get; private set; }

        public bool CausePermitFlag { get; private set; }

        public string CausePermit { get; private set; }

        public string InspectorDetail { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[94] = Models\ComplianceActionService.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceActionService
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public int RegisteredAddressId { get; private set; }

        public int AlternateAddressId { get; private set; }

        public string Email { get; private set; }

        public bool ServiceEmail { get; private set; }

        public bool HasServiceRegisteredAddress { get; private set; }

        public bool HasServiceAlternateAddress { get; private set; }

        public bool ServiceInPerson { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[95] = Models\ComplianceActionServiceAddress.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceActionServiceAddress
    {
        public int Id { get; private set; }

        public int StateId { get; private set; }

        public string LocalGovernmentArea { get; private set; }

        public string LgashortTitle { get; private set; }

        public string Near { get; private set; }

        public string CommonName { get; private set; }

        public string Remark { get; private set; }

        public bool Active { get; private set; }

        public MapDetail MapDetail { get; private set; }

        public AddressBook Address { get; private set; }

        public DateTimeOffset? DateAdded { get; private set; }

    }
}

file[96] = Models\ComplianceActionStatus.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceActionStatus
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public int StatusId { get; private set; }

        public string Reason { get; private set; }

        public DateTimeOffset? RecordedDate { get; private set; }

        public string ToProceedOffence { get; private set; }

        public string GivenName { get; private set; }

        public string FamilyName { get; private set; }

        public int UserId { get; private set; }

        public string HomeLocation { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[97] = Models\ComplianceActionSubComponent.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceActionSubComponent
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public string Name { get; private set; }

        public string NameCode { get; private set; }

        public string Action { get; private set; }

        public string ActionCode { get; private set; }

        public string Information { get; private set; }

        public bool Active { get; private set; }

    }
}

file[98] = Models\ComplianceDefect.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceDefect
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public decimal Odometer { get; private set; }

        public bool VehicleUnattended { get; private set; }

        public bool NumberPlateDefective { get; private set; }

        public bool LabelAttached { get; private set; }

        public bool RoadWorthyRequired { get; private set; }

        public string ConditionOfUse { get; private set; }

        public string NoticeToBeCleared { get; private set; }

        public DateTimeOffset? VehicleNotUsed { get; private set; }

        public int VehicleNotUsedDay { get; private set; }

        public int VehicleNotUsedHour { get; private set; }

        public string InspectionType { get; private set; }

        public string NatureOfInspection { get; private set; }

        public bool InspectionTypeFull { get; private set; }

        public bool InspectionTypePartial { get; private set; }

        public bool InspectionTypeOther { get; private set; }

        public bool InspectionTypeAudit { get; private set; }

        public bool DefectCategoryMinor { get; private set; }

        public bool DefectCategoryMajor { get; private set; }

        public bool DefectCategoryMajorGrounded { get; private set; }

        public bool DefectCategorySelfClearing { get; private set; }

        public bool VicRoadsInspection { get; private set; }

        public bool InfringementIssued { get; private set; }

        public string HowIsTheVehicleDefective { get; private set; }

        public string ClearanceInspection { get; private set; }

        public string ClearedAt { get; private set; }

        public string ClearanceOther { get; private set; }

        public string ClearedReferenceId { get; private set; }

        public string Direction { get; private set; }

        public string MethodOfRemoval { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[99] = Models\ComplianceDefectSubComponent.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceDefectSubComponent
    {
        public int Id { get; private set; }

        public int ComplianceDefectId { get; private set; }

        public string Name { get; private set; }

        public string NameCode { get; private set; }

        public string Action { get; private set; }

        public string ActionCode { get; private set; }

        public string Information { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[100] = Models\ComplianceDirectionDimension.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceDirectionDimension
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public int PersonDriverId { get; private set; }

        public int PersonOperatorId { get; private set; }

        public int OrganisationOperatorId { get; private set; }

        public bool MassLimit { get; private set; }

        public bool DimensionLimit { get; private set; }

        public bool Unsafe { get; private set; }

        public bool NotSecured { get; private set; }

        public string Severity { get; private set; }

        public bool SecureLoad { get; private set; }

        public bool ReduceGvm { get; private set; }

        public decimal ReduceGvmnumber { get; private set; }

        public bool AdjustAxleGroup { get; private set; }

        public int AdjustAxleGroupNumber { get; private set; }

        public int AdjustAxleGroupBy { get; private set; }

        public bool AdjustVehicleDimension { get; private set; }

        public decimal AdjustVehicleDimensionLength { get; private set; }

        public decimal AdjustVehicleDimensionWidth { get; private set; }

        public decimal AdjustVehicleDimensionHeight { get; private set; }

        public decimal AdjustVehicleDimensionOverhang { get; private set; }

        public string NominatedPlace { get; private set; }

        public string Condition { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[101] = Models\ComplianceDirectionDimensionsHardcopy.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceDirectionDimensionsHardcopy
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public int PersonDriverId { get; private set; }

        public int PersonOperatorId { get; private set; }

        public int OrganisationOperatorId { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[102] = Models\ComplianceDirectionFatigue.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceDirectionFatigue
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public string WorkDiaryPageNumber { get; private set; }

        public bool ReasonableBeliefFatigue { get; private set; }

        public bool ReasonableBeliefMaximumWorkTime { get; private set; }

        public bool ReasonableBeliefMinimumRestTime { get; private set; }

        public bool ReasonableBeliefNoWorkDiary { get; private set; }

        public bool SuitableRestPlace { get; private set; }

        public string SuitableRestPlaceSuburb { get; private set; }

        public string SuitableRestPlaceOther { get; private set; }

        public bool WorkReduced { get; private set; }

        public int WorkReducedHour { get; private set; }

        public int WorkReducedMinute { get; private set; }

        public bool ContinuousRest { get; private set; }

        public DateTimeOffset? ContinuousRestFrom { get; private set; }

        public DateTimeOffset? ContinuousRestTo { get; private set; }

        public bool RestOrBreak { get; private set; }

        public int RestOrBreakHour { get; private set; }

        public int RestOrBreakMinute { get; private set; }

        public DateTimeOffset? RestOrBreakCommencing { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[103] = Models\ComplianceDirectionToRectify.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceDirectionToRectify
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public string DescriptionOfBreach { get; private set; }

        public string DirectedTo { get; private set; }

        public string DirectedToLocation { get; private set; }

        public string MovementCondition { get; private set; }

        public bool Active { get; private set; }

    }
}

file[104] = Models\ComplianceEducation.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceEducation
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public string Category { get; private set; }

        public bool OnRoad { get; private set; }

        public string TopicOfInterest { get; private set; }

        public int TimeTakenHour { get; private set; }

        public int TimeTakenMinute { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[105] = Models\ComplianceFormalCaution.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceFormalCaution
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public decimal DetectedSpeed { get; private set; }

        public decimal AllegedSpeed { get; private set; }

        public decimal PermittedSpeed { get; private set; }

        public string Information { get; private set; }

        public string ActionInvolvement { get; private set; }

        public string Employer { get; private set; }

        public string Occupation { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[106] = Models\ComplianceFormalWarning.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceFormalWarning
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public bool UseTheVehicle { get; private set; }

        public bool PermittedTheUse { get; private set; }

        public bool Other { get; private set; }

        public string Description { get; private set; }

        public string ActionInvolvement { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[107] = Models\ComplianceInfringement.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceInfringement
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public decimal DetectedSpeed { get; private set; }

        public decimal AllegedSpeed { get; private set; }

        public decimal PermittedSpeed { get; private set; }

        public string Information { get; private set; }

        public string ActionInvolvement { get; private set; }

        public string Employer { get; private set; }

        public string Occupation { get; private set; }

        public bool AssociateWeighingNotice { get; private set; }

        public int VehicleOccupant { get; private set; }

        public bool Pplate { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[108] = Models\ComplianceOfficialWarning.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceOfficialWarning
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public bool UseTheVehicle { get; private set; }

        public bool PermittedTheUse { get; private set; }

        public bool Other { get; private set; }

        public string Description { get; private set; }

        public string ActionInvolvement { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[109] = Models\ComplianceReportForProsecution.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceReportForProsecution
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public string ReferenceNumber { get; private set; }

        public bool Active { get; private set; }

    }
}

file[110] = Models\ComplianceWAFormalCaution.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ComplianceWAFormalCaution
    {
        public int Id { get; private set; }

        public int ComplianceActionId { get; private set; }

        public bool UseTheVehicle { get; private set; }

        public bool PermittedTheUse { get; private set; }

        public bool Other { get; private set; }

        public string Description { get; private set; }

        public bool Active { get; private set; }

    }
}

file[111] = Models\Event.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class Event
    {
        public int Id { get; private set; }

        public Guid? CreationId { get; private set; }

        public Guid? StatusId { get; private set; }

        public Guid? OrganisationId { get; private set; }

        public Guid? ReviewedUserId { get; private set; }

        public DateTimeOffset? ReviewedDateTime { get; private set; }

        public DateTimeOffset? CreateDate { get; private set; }

        public DateTimeOffset? CompletedDate { get; private set; }

        public DateTimeOffset? ReportedOnDate { get; private set; }

        public DateTimeOffset? TookPlaceStartDate { get; private set; }

        public DateTimeOffset? TookPlaceEndDate { get; private set; }

        public DateTimeOffset? VehicleReleaseDate { get; private set; }

        public bool? VehicleGrounded { get; private set; }

        public string? OperationName { get; private set; }

        public string? MethodOfIntercept { get; private set; }

        public string? DirectionOfTravel { get; private set; }

        public bool? Light { get; private set; }

        public bool? Siren { get; private set; }

        public bool? UrgentDutyDriving { get; private set; }

        public bool? ComplianceActionOffenceReport { get; private set; }

        public bool? ComplianceActionOffenceReportReference { get; private set; }

        public bool Active { get; private set; }

        public SourceSystemTypes SystemId { get; private set; }

    }
}

file[112] = Models\EventAddress.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventAddress
    {
        public int Id { get; private set; }

        public Guid? StateId { get; private set; }

        public AddressTypes EventAddressType { get; private set; }

        public string? LocalGovernmentArea { get; private set; }

        public string? LGAShortTitle { get; private set; }

        public string? Near { get; private set; }

        public string? CommonName { get; private set; }

        public string? Remark { get; private set; }

        public bool Active { get; private set; }

        public MapDetail MapDetail { get; private set; }

        public AddressBook Address { get; private set; }

        public DateTimeOffset DateAdded { get; private set; }

    }
}

file[113] = Models\EventInspection.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventInspection
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public bool VehicleStandardsInspected { get; private set; }

        public bool VehicleStandardsPassed { get; private set; }

        public int VehicleStandardsLevel { get; private set; }

        public string VehicleStandardsEquipment { get; private set; }

        public bool PermitInspected { get; private set; }

        public string Permit { get; private set; }

        public bool MassInspected { get; private set; }

        public bool MassGenerateWeighingNotice { get; private set; }

        public string MassWeighingNoticeMediaRef { get; private set; }

        public string MassWeighingNoticeNumber { get; private set; }

        public string MassAxleConfiguration { get; private set; }

        public string MassWeighingCategory { get; private set; }

        public string MassWeighingMethod { get; private set; }

        public bool MassBridgeCalibratedZeroed { get; private set; }

        public bool MassConformingSite { get; private set; }

        public bool MassDriverViewedWeighing { get; private set; }

        public string MassOperatorCourseOfTrade { get; private set; }

        public string MassDriverStatusToOwner { get; private set; }

        public string MassDriverInstructedBy { get; private set; }

        public string MassPublicTrade { get; private set; }

        public string MassGrossEndAndEnd { get; private set; }

        public string MassWitnessName { get; private set; }

        public string MassWitnessPhoneNumber { get; private set; }

        public string MassComment { get; private set; }

        public int WeighingDataStepCount { get; private set; }

        public decimal WeighingDataExtremeAxleDistance { get; private set; }

        public decimal WeighingDataCombinedWeight { get; private set; }

        public decimal WeighingDataDefaultAllowedWeight { get; private set; }

        public decimal WeighingDataAllowedWeight { get; private set; }

        public decimal WeighingDataMassAdjustment { get; private set; }

        public decimal WeighingDataMassAdjustmentPerStep { get; private set; }

        public decimal WeighingDataPercentageOfAllowed { get; private set; }

        public string WeighingDataPermit { get; private set; }

        public string WeighBridgeName { get; private set; }

        public DateTimeOffset? WeighBridgeExpiry { get; private set; }

        public DateTimeOffset? WeighBridgeConfigureDate { get; private set; }

        public string WeighBridgeLocation { get; private set; }

        public bool DimensionsInspected { get; private set; }

        public bool DimensionsPassed { get; private set; }

        public decimal DimensionsHeight { get; private set; }

        public decimal DimensionsWidth { get; private set; }

        public decimal DimensionsLength { get; private set; }

        public decimal DimensionsRearOverhang { get; private set; }

        public string DimensionsMeasuringInstrument { get; private set; }

        public string DimensionsProjection { get; private set; }

        public string DimensionsSingleVehicle { get; private set; }

        public bool LoadRestraintInspected { get; private set; }

        public bool LoadRestraintPassed { get; private set; }

        public string LoadRestraintNote { get; private set; }

        public bool Active { get; private set; }

    }
}

file[114] = Models\EventInspectionAxleGroup.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventInspectionAxleGroup
    {
        public int Id { get; private set; }

        public int EventInspectionId { get; private set; }

        public decimal DefaultMassAdjustment { get; private set; }

        public decimal MassAdjustment { get; private set; }

        public int WheelCount { get; private set; }

        public decimal CombinedWeight { get; private set; }

        public decimal PercentageOfAllowed { get; private set; }

        public decimal AllowedWeight { get; private set; }

        public decimal DefaultAllowedWeight { get; private set; }

        public bool Active { get; private set; }

    }
}

file[115] = Models\EventInspectionAxleWeight.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventInspectionAxleWeight
    {
        public int Id { get; private set; }

        public int EventInspectionAxleGroupId { get; private set; }

        public decimal AxleOffset { get; private set; }

        public decimal OffSide { get; private set; }

        public decimal NearSide { get; private set; }

        public decimal CombinedWeight { get; private set; }

        public decimal DistanceBetweenAxle { get; private set; }

        public bool IsCustom { get; private set; }

        public bool Active { get; private set; }

    }
}

file[116] = Models\EventInspectionAxleWeightPwd.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventInspectionAxleWeightPwd
    {
        public int Id { get; private set; }

        public int EventInspectionAxleWeightId { get; private set; }

        public string Number { get; private set; }

        public DateTimeOffset? Expiry { get; private set; }

        public bool Active { get; private set; }

    }
}

file[117] = Models\EventInspectionMovement.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventInspectionMovement
    {
        public int Id { get; private set; }

        public int EventInspectionId { get; private set; }

        public decimal FoundWeight { get; private set; }

        public decimal PercentageOfAllowed { get; private set; }

        public decimal MassAdjustment { get; private set; }

        public decimal AllowedWeight { get; private set; }

        public bool Active { get; private set; }

    }
}

file[118] = Models\EventMediaExternal.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventMediaExternal
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public string Type { get; private set; }

        public string Uri { get; private set; }

        public bool Active { get; private set; }

    }
}

file[119] = Models\EventMedium.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventMedium
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public Guid ReferenceId { get; private set; }

        public string Description { get; private set; }

        public string MimeType { get; private set; }

        public string FileName { get; private set; }

        public bool InPerson { get; private set; }

        public Guid ThumbnailReferenceId { get; private set; }

        public bool Active { get; private set; }

    }
}

file[120] = Models\EventNote.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventNote
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public string TextValue { get; private set; }

        public DateTimeOffset? RecordedDate { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[121] = Models\EventOfficer.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventOfficer
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public int UserId { get; private set; }

        public int EventOfficerTypeId { get; private set; }

        public string HomeStation { get; private set; }

        public string AuthorityNumber { get; private set; }

        public string FirstName { get; private set; }

        public string Surname { get; private set; }

        public bool Active { get; private set; }

    }
}

file[122] = Models\EventOrganisation.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventOrganisation
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public int OrganisationId { get; private set; }

        public int EventOrganisationTypeId { get; private set; }

        public bool Active { get; private set; }

    }
}

file[123] = Models\EventPerson.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventPerson
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public int PersonId { get; private set; }

        public int EventPersonTypeId { get; private set; }

        public bool Active { get; private set; }

    }
}

file[124] = Models\EventPersonDiary.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventPersonDiary
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public int PersonId { get; private set; }

        public bool Presented { get; private set; }

        public string OtherReason { get; private set; }

        public bool Other { get; private set; }

        public bool LessThan100km { get; private set; }

        public bool LessThan160km { get; private set; }

        public bool LessThan12ton { get; private set; }

        public string Type { get; private set; }

        public string BookNumber { get; private set; }

        public string PageNumber { get; private set; }

        public int StateId { get; private set; }

        public DateTimeOffset? IssueDate { get; private set; }

        public string ElectronicId { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[125] = Models\EventPersonFatigue.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventPersonFatigue
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public int PersonId { get; private set; }

        public string Regulated { get; private set; }

        public bool AppearFatigued { get; private set; }

        public string DriverHomeLocation { get; private set; }

        public string RecordKeeperName { get; private set; }

        public string RecordKeeperLocation { get; private set; }

        public string AccreditationNumber { get; private set; }

        public string Scheduler { get; private set; }

        public bool Active { get; private set; }

    }
}

file[126] = Models\EventVehicle.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventVehicle
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public int VehicleId { get; private set; }

        public int EventVehicleTypeId { get; private set; }

        public bool Active { get; private set; }

    }
}

file[127] = Models\EventVehicleConcession.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventVehicleConcession
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public int VehicleId { get; private set; }

        public string Code { get; private set; }

        public string Description { get; private set; }

        public bool Active { get; private set; }

    }
}

file[128] = Models\EventVehicleCondition.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventVehicleCondition
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public int VehicleId { get; private set; }

        public string Type { get; private set; }

        public string Description { get; private set; }

        public bool Active { get; private set; }

    }
}

file[129] = Models\EventVehicleScheme.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class EventVehicleScheme
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public int VehicleId { get; private set; }

        public string Module { get; private set; }

        public string Number { get; private set; }

        public DateTimeOffset? ExpiryDate { get; private set; }

        public bool Active { get; private set; }

    }
}

file[130] = Models\Intercept.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class Intercept
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public string InterceptNumber { get; private set; }

    }
}

file[131] = Models\InterceptImport.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class InterceptImport
    {
        public int Id { get; private set; }

        public int VehicleRegistrationStateId { get; private set; }

        public string VehicleRegistrationNumber { get; private set; }

        public string PersonGivenName { get; private set; }

        public string PersonFamilyName { get; private set; }

        public DateTimeOffset? PersonDateOfBirth { get; private set; }

        public string PersonLicenceNumber { get; private set; }

        public int PersonLicenceStateId { get; private set; }

        public string OrganisationAcn { get; private set; }

        public string OrganisationIncorporatedNumber { get; private set; }

        public string InterceptNumber { get; private set; }

        public DateTimeOffset? DateIssued { get; private set; }

        public int StateId { get; private set; }

        public string VehicleInfo { get; private set; }

        public string NoticesDescription { get; private set; }

        public bool HasNotice { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[132] = Models\InterceptJourney.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class InterceptJourney
    {
        public int Id { get; private set; }

        public int InterceptId { get; private set; }

        public string IndustrySector { get; private set; }

        public string StartingLocation { get; private set; }

        public string EndLocation { get; private set; }

        public string Consignor { get; private set; }

        public string ConsignorLocation { get; private set; }

        public string Loader { get; private set; }

        public string LoaderLocation { get; private set; }

        public string Consignee { get; private set; }

        public string ConsigneeLocation { get; private set; }

        public bool PhotosProvided { get; private set; }

        public string DriverEmployer { get; private set; }

        public string LoadedGood { get; private set; }

        public string LoadedOther { get; private set; }

        public decimal Odometer { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[133] = Models\InterceptOrganisation.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class InterceptOrganisation
    {
        public int Id { get; private set; }

        public int InterceptId { get; private set; }

        public int OrganisationId { get; private set; }

        public bool Active { get; private set; }

    }
}

file[134] = Models\InterceptPerson.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class InterceptPerson
    {
        public int Id { get; private set; }

        public int InterceptId { get; private set; }

        public int PersonId { get; private set; }

        public bool Active { get; private set; }

    }
}

file[135] = Models\InterceptVehicle.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class InterceptVehicle
    {
        public int Id { get; private set; }

        public int InterceptId { get; private set; }

        public int VehicleId { get; private set; }

        public bool Active { get; private set; }

    }
}

file[136] = Models\Log.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class Log
    {
        public int Id { get; private set; }

        public int LogTypeId { get; private set; }

        public int LogLevelTypeId { get; private set; }

        public int LogComponentTypeId { get; private set; }

        public int UserId { get; private set; }

        public string SignInName { get; private set; }

        public int OrganisationId { get; private set; }

        public string Source { get; private set; }

        public DateTimeOffset? EventDate { get; private set; }

        public string DeviceId { get; private set; }

        public string Message { get; private set; }

        public string Exception { get; private set; }

        public string RequestId { get; private set; }

        public string RequestBody { get; private set; }

        public string ResponseBody { get; private set; }

        public int Duration { get; private set; }

        public string ClientVersion { get; private set; }

    }
}

file[137] = Models\MapDetail.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class MapDetail
    {
        public decimal? Altitude { get; private set; }

        public decimal? AltitudeAccuracy { get; private set; }

        public decimal? HorizontalAccuracy { get; private set; }

        public decimal? Longitude { get; private set; }

        public decimal? Latitude { get; private set; }

        public decimal? Elevation { get; private set; }

    }
}

file[138] = Models\NoticeNumber.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class NoticeNumber
    {
        public int Id { get; private set; }

        public int StateId { get; private set; }

        public int NoticeTypeId { get; private set; }

        public string Description { get; private set; }

        public int StartSequenceNumber { get; private set; }

        public int LastSequenceNumber { get; private set; }

        public string NumberFormat { get; private set; }

        public int PerCallAllocation { get; private set; }

        public bool Active { get; private set; }

    }
}

file[139] = Models\Organisation.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class Organisation
    {
        public int Id { get; private set; }

        public Guid? CreationId { get; private set; }

        public string Name { get; private set; }

        public string ACN { get; private set; }

        public OrganisationTypes TypeId { get; private set; }

        public string? NevdisId { get; private set; }

        public string? VicCustomerNo { get; private set; }

        public int? ParentId { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[140] = Models\OrganisationAddress.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class OrganisationAddress
    {
        public int Id { get; private set; }

        public int OrganisationId { get; private set; }

        public int EventId { get; private set; }

        public int AddressTypeId { get; private set; }

        public string LocalGovernmentArea { get; private set; }

        public string LgashortTitle { get; private set; }

        public string Near { get; private set; }

        public string CommonName { get; private set; }

        public string Remark { get; private set; }

        public int StateId { get; private set; }

        public bool Active { get; private set; }

        public string Source { get; private set; }

        public MapDetail MapDetail { get; private set; }

        public AddressBook Address { get; private set; }

        public DateTimeOffset? DateAdded { get; private set; }

    }
}

file[141] = Models\OrganisationContact.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class OrganisationContact
    {
        public int Id { get; private set; }

        public int OrganisationId { get; private set; }

        public int EventId { get; private set; }

        public int ContactTypeId { get; private set; }

        public string ContactValue { get; private set; }

        public DateTimeOffset? DateAdded { get; private set; }

        public bool Active { get; private set; }

        public string Source { get; private set; }

    }
}

file[142] = Models\OrganisationDetail.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class OrganisationDetail
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public int OrganisationId { get; private set; }

        public string Name { get; private set; }

        public string Acn { get; private set; }

        public string IncorporatedNumber { get; private set; }

        public int TypeId { get; private set; }

        public int StateId { get; private set; }

        public string Status { get; private set; }

        public DateTimeOffset? DateOfRegistration { get; private set; }

        public int AlertLevel { get; private set; }

        public int AssociatedAlertLevel { get; private set; }

        public string Source { get; private set; }

        public bool Active { get; private set; }

    }
}

file[143] = Models\Person.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class Person
    {
        public int Id { get; private set; }

        public Guid? CreationId { get; private set; }

        public string GivenName { get; private set; }

        public string FamilyName { get; private set; }

        public DateTimeOffset DateOfBirth { get; private set; }

        public string? LicenceNumber { get; private set; }

        public States LicenceState { get; private set; }

        public int SystemId { get; private set; }

        public bool Active { get; private set; }

        public string? SourcePersonId { get; private set; }

    }
}

file[144] = Models\PersonAddress.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class PersonAddress
    {
        public int Id { get; private set; }

        public int PersonId { get; private set; }

        public int EventId { get; private set; }

        public int StateId { get; private set; }

        public int AddressTypeId { get; private set; }

        public string LocalGovernmentArea { get; private set; }

        public string LgashortTitle { get; private set; }

        public string Near { get; private set; }

        public string CommonName { get; private set; }

        public string Remark { get; private set; }

        public bool Active { get; private set; }

        public string Source { get; private set; }

        public MapDetail MapDetail { get; private set; }

        public AddressBook Address { get; private set; }

        public DateTimeOffset? DateAdded { get; private set; }

    }
}

file[145] = Models\PersonContact.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class PersonContact
    {
        public int Id { get; private set; }

        public int PersonId { get; private set; }

        public int EventId { get; private set; }

        public int ContactTypeId { get; private set; }

        public string ContactValue { get; private set; }

        public DateTimeOffset? DateAdded { get; private set; }

        public bool Active { get; private set; }

        public string Source { get; private set; }

    }
}

file[146] = Models\PersonDetail.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class PersonDetail
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public int PersonId { get; private set; }

        public string GivenName { get; private set; }

        public string FamilyName { get; private set; }

        public DateTimeOffset? DateOfBirth { get; private set; }

        public string MiddleName { get; private set; }

        public string Gender { get; private set; }

        public bool Active { get; private set; }

        public int AlertLevel { get; private set; }

        public int AssociatedAlertLevel { get; private set; }

        public string Source { get; private set; }

        public string LicenceType { get; private set; }

        public string LicenceNumber { get; private set; }

        public string LicenceClass { get; private set; }

        public string LicenceCondition { get; private set; }

        public bool LicenceProduced { get; private set; }

        public DateTimeOffset? LicenceEffective { get; private set; }

        public DateTimeOffset? LicenceExpiry { get; private set; }

        public string LicenceStatus { get; private set; }

        public int LicenceStateId { get; private set; }

        public bool InternationalLicence { get; private set; }

        public string Jurisdiction { get; private set; }

        public string ProfileImageUrl { get; private set; }

    }
}

file[147] = Models\Postcode.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class Postcode
    {
        public int Id { get; private set; }

        public int SourceId { get; private set; }

        public string Postcode1 { get; private set; }

        public string Locality { get; private set; }

        public string State { get; private set; }

    }
}

file[148] = Models\ReferenceDatum.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ReferenceDatum
    {
        public int Id { get; private set; }

        public int CategoryId { get; private set; }

        public string Code { get; private set; }

        public string Name { get; private set; }

        public string Description { get; private set; }

        public DateTimeOffset? EffectFrom { get; private set; }

        public DateTimeOffset? EffectTo { get; private set; }

        public int SortOrder { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[149] = Models\ReferenceDataAttribute.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ReferenceDataAttribute
    {
        public int Id { get; private set; }

        public int ReferenceDataId { get; private set; }

        public string Name { get; private set; }

        public string Value { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[150] = Models\ReferenceDataCategory.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ReferenceDataCategory
    {
        public int Id { get; private set; }

        public string Code { get; private set; }

        public string Name { get; private set; }

        public string Description { get; private set; }

        public int SortOrder { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

        public bool SystemUse { get; private set; }

    }
}

file[151] = Models\ReferenceDataMapping.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ReferenceDataMapping
    {
        public int Id { get; private set; }

        public int ReferenceDataId { get; private set; }

        public int ReferenceDataCategoryId { get; private set; }

        public string SourceValue { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[152] = Models\Shift.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class Shift
    {
        public int Id { get; private set; }

        public int StartTime { get; private set; }

        public DateTimeOffset? EndTime { get; private set; }

        public DateTimeOffset? EstimatedEndTime { get; private set; }

        public string Operation { get; private set; }

        public string Remark { get; private set; }

    }
}

file[153] = Models\ShiftOfficer.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class ShiftOfficer
    {
        public int Id { get; private set; }

        public int ShiftId { get; private set; }

        public int UserId { get; private set; }

        public bool Active { get; private set; }

    }
}

file[154] = Models\User.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class User
    {
        public int Id { get; private set; }

        public string SignInName { get; private set; }

        public string FirstName { get; private set; }

        public string Surname { get; private set; }

        public int UserOrganisation { get; private set; }

        public string PrimaryRole { get; private set; }

        public string ActingRole { get; private set; }

        public DateTimeOffset? ActingFrom { get; private set; }

        public DateTimeOffset? ActingTo { get; private set; }

        public bool IsAdmin { get; private set; }

        public bool ManageBasicManifest { get; private set; }

        public bool ManageAdvancedManifest { get; private set; }

        public DateTimeOffset? EffectFrom { get; private set; }

        public DateTimeOffset? EffectTo { get; private set; }

        public string AuthorityNumber { get; private set; }

        public string HomeStation { get; private set; }

        public string Region { get; private set; }

        public string Team { get; private set; }

        public bool Active { get; private set; }

    }
}

file[155] = Models\Vehicle.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class Vehicle
    {
        public int Id { get; private set; }

        public Guid? CreationId { get; private set; }

        public States RegistrationState { get; private set; }

        public string? RegistrationNumber { get; private set; }

        public bool IsNationalRegistration { get; private set; }

        public string? VehicleIdentificationNumber { get; private set; }

        public string? EngineNumber { get; private set; }

        public string? ChassisNumber { get; private set; }

        public string SourceVehicleId { get; private set; }

        public SourceSystemTypes SystemId { get; private set; }

        public bool Active { get; private set; }

    }
}

file[156] = Models\VehicleDetail.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class VehicleDetail
    {
        public int Id { get; private set; }

        public string? VehicleIdentificationNumber { get; private set; }

        public string? EngineNumber { get; private set; }

        public string? ChassisNumber { get; private set; }

        public States RegistrationState { get; private set; }

        public string? RegistrationNumber { get; private set; }

        public string? RegistrationStatus { get; private set; }

        public bool IsNationalRegistration { get; private set; }

        public string SourceVehicleId { get; private set; }

        public SourceSystemTypes SystemId { get; private set; }

    }
}

file[157] = Models\VehicleFootprint.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class VehicleFootprint
    {
        public int Id { get; private set; }

        public decimal Latitude { get; private set; }

        public decimal Longitude { get; private set; }

        public string Direction { get; private set; }

        public DateTimeOffset? SampleTakenOn { get; private set; }

        public int EventId { get; private set; }

        public int VehicleId { get; private set; }

        public string SourceType { get; private set; }

        public string SourceReference { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

        public int StateId { get; private set; }

    }
}

file[158] = Models\VehicleFootprintImport.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class VehicleFootprintImport
    {
        public int Id { get; private set; }

        public decimal Latitude { get; private set; }

        public decimal Longitude { get; private set; }

        public string Direction { get; private set; }

        public DateTimeOffset? SampleTakenOn { get; private set; }

        public int StateId { get; private set; }

        public string FullAddress { get; private set; }

        public int VehicleRegistrationStateId { get; private set; }

        public string VehicleRegistrationNumber { get; private set; }

        public string SourceType { get; private set; }

        public string SourceReference { get; private set; }

        public string SourceRecordId { get; private set; }

        public bool Active { get; private set; }

        public int SystemId { get; private set; }

    }
}

file[159] = Models\VehicleOrganisation.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class VehicleOrganisation
    {
        public int Id { get; private set; }

        public int OrganisationId { get; private set; }

        public int VehicleId { get; private set; }

        public bool Active { get; private set; }

    }
}

file[160] = Models\VehiclePerson.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class VehiclePerson
    {
        public int Id { get; private set; }

        public int PersonId { get; private set; }

        public int VehicleId { get; private set; }

        public bool Active { get; private set; }

    }
}

file[161] = Models\WAEventInspection.generated.cs
// Auto-generated using OurPresence.Modeller template 'Entity Framework Entity classes' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.Data.Models
{
    partial class WAEventInspection
    {
        public int Id { get; private set; }

        public int EventId { get; private set; }

        public int WainterceptId { get; private set; }

        public bool DangerousGoodsInspected { get; private set; }

        public bool DangerousGoodsHardCopy { get; private set; }

        public string DangerousGoodsJuroEntry { get; private set; }

        public string DangerousGoodsClassOrDivisionOfDg { get; private set; }

        public string DangerousGoodsProduct { get; private set; }

        public string DangerousGoodsLoadDescriptor { get; private set; }

        public string DangerousGoodsPrimeContractorName { get; private set; }

        public string DangerousGoodsPrimeContractorAddress { get; private set; }

        public string DangerousGoodsPrimeContractorPhone { get; private set; }

        public string DangerousGoodsConsignorName { get; private set; }

        public string DangerousGoodsConsignorAddress { get; private set; }

        public string DangerousGoodsConsignorPhone { get; private set; }

        public string DangerousGoodsInspectionType { get; private set; }

        public bool DangerousGoodsRemediationNoticeIssued { get; private set; }

        public string DangerousGoodsRemediationNoticeNumber { get; private set; }

        public bool DangerousGoodsPhotosAttached { get; private set; }

        public string DangerousGoodsComment { get; private set; }

        public string DangerousGoodsMediaRef { get; private set; }

        public bool VehicleStandardsInspected { get; private set; }

        public bool VehicleStandardsPassed { get; private set; }

        public string VehicleStandardsEquipment { get; private set; }

        public bool MassInspected { get; private set; }

        public string MassWeighingNoticeMediaRef { get; private set; }

        public string MassWeighingNoticeNumber { get; private set; }

        public string MassAxleConfiguration { get; private set; }

        public string MassWeighingCategory { get; private set; }

        public string MassWeighingMethod { get; private set; }

        public bool MassBridgeCalibratedZeroed { get; private set; }

        public bool MassConformingSite { get; private set; }

        public bool MassDriverViewedWeighing { get; private set; }

        public string MassOperatorCourseOfTrade { get; private set; }

        public string MassDriverStatusToOwner { get; private set; }

        public string MassDriverInstructedBy { get; private set; }

        public string MassPublicTrade { get; private set; }

        public string MassGrossEndAndEnd { get; private set; }

        public string MassWitnessName { get; private set; }

        public string MassWitnessPhoneNumber { get; private set; }

        public string MassComment { get; private set; }

        public int WeighingDataStepCount { get; private set; }

        public decimal WeighingDataExtremeAxleDistance { get; private set; }

        public decimal WeighingDataCombinedWeight { get; private set; }

        public decimal WeighingDataDefaultAllowedWeight { get; private set; }

        public decimal WeighingDataAllowedWeight { get; private set; }

        public decimal WeighingDataMassAdjustment { get; private set; }

        public decimal WeighingDataMassAdjustmentPerStep { get; private set; }

        public decimal WeighingDataPercentageOfAllowed { get; private set; }

        public string WeighingDataPermit { get; private set; }

        public string WeighBridgeName { get; private set; }

        public DateTimeOffset? WeighBridgeExpiry { get; private set; }

        public DateTimeOffset? WeighBridgeConfigureDate { get; private set; }

        public string WeighBridgeLocation { get; private set; }

        public bool DimensionsInspected { get; private set; }

        public bool DimensionsPassed { get; private set; }

        public decimal DimensionsHeight { get; private set; }

        public decimal DimensionsWidth { get; private set; }

        public decimal DimensionsLength { get; private set; }

        public decimal DimensionsRearOverhang { get; private set; }

        public string DimensionsProjection { get; private set; }

        public string DimensionsOtherDimension { get; private set; }

        public bool LoadRestraintInspected { get; private set; }

        public bool LoadRestraintPassed { get; private set; }

        public string LoadRestraintNote { get; private set; }

    }
}

