file[0] = Nhvr.Rcms.BusinessLogic.csproj
<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net5.0</TargetFramework>
        <RootNamespace>Nhvr.Rcms.BusinessLogic</RootNamespace>
        <LangVersion>Preview</LangVersion>
        <Nullable>enable</Nullable>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="MediatR" Version="9.0.0" />
        <PackageReference Include="CSharpFunctionalExtensions" Version="2.18.0" />
        <PackageReference Include="FluentValidation" Version="10.3.0" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\Nhvr.Rcms.Common\Nhvr.Rcms.Common.csproj" />
    </ItemGroup>

</Project>

file[1] = usings.cs
global using System;
global using System.Collections.Generic;
global using System.Linq;
global using System.Text;
global using System.Threading.Tasks;
global using CSharpFunctionalExtensions;
global using FluentValidation;
global using MediatR;

global using Nhvr.Rcms.Common.Enums;

file[2] = ActivityLog\Officer\ActivityLog.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.ActivityLog.Officer
{
    public partial record ActivityLogOfficerRequest : IRequest<Result<IEnumerable<ActivityLogResult>>>
    {
    }
    public partial record ActivityLogResult
    {
        public int Id { get;  set; }

        public DateTimeOffset StartTime { get;  set; }

        public DateTimeOffset EndTime { get;  set; }

        public string Source { get;  set; }

        public string ActivityType { get;  set; }

        public string Remark { get;  set; }

        public bool Light { get;  set; }

        public bool Siren { get;  set; }

        public bool UrgentDutyDriving { get;  set; }

        public bool IsEditable { get;  set; }

        public bool SystemGenerated { get;  set; }

        public DateTimeOffset DateAdded { get;  set; }

    }
}

file[3] = ActivityLog\Add\ActivityLog.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.ActivityLog.Add
{
    public partial record ActivityLogAddRequest : IRequest<Result<ActivityLogAddResult>>
    {
        public DateTimeOffset DateAdded { get;  set; }

        public DateTimeOffset StartTime { get;  set; }

        public string ActivityType { get;  set; }

    }
    public partial record ActivityLogAddResult
    {
        public int Id { get;  set; }

    }
}

file[4] = ActivityLog\Update\ActivityLog.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.ActivityLog.Update
{
    public partial record ActivityLogUpdateRequest : IRequest<Result<ActivityLogUpdateResult>>
    {
        public DateTimeOffset EndTime { get;  set; }

        public string Remark { get;  set; }

        public bool? Light { get;  set; }

        public bool? Siren { get;  set; }

        public bool? UrgentDutyDriving { get;  set; }

    }
    public partial record ActivityLogUpdateResult
    {
        public int Id { get;  set; }

    }
}

file[5] = ActivityLog\Delete\ActivityLog.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.ActivityLog.Delete
{
    public partial record ActivityLogDeleteRequest : IRequest
    {
        public int Id { get;  set; }

    }
}

file[6] = Alert\Save\Alert.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.Alert.Save
{
    public partial record AlertSaveRequest : IRequest<Result<AlertSaveResult>>
    {
        public int Id { get;  set; }

        public int AlertLevel { get;  set; }

        public DateTimeOffset EffectiveDate { get;  set; }

        public DateTimeOffset ExpiryDate { get;  set; }

        public string Remark { get;  set; }

        public bool Silent { get;  set; }

        public int SilentNotifyContactId { get;  set; }

        public int PersonId { get;  set; }

        public int VehicleId { get;  set; }

        public int OrganisationId { get;  set; }

    }
    public partial record AlertSaveResult
    {
        public int Id { get;  set; }

    }
}

file[7] = Alert\Delete\Alert.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.Alert.Delete
{
    public partial record AlertDeleteRequest : IRequest
    {
        public int Id { get;  set; }

        public string Reason { get;  set; }

    }
}

file[8] = BatchProcess\SilentEmail\BatchProcess.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.BatchProcess.SilentEmail
{
    public partial record BatchProcessSilentEmailRequest : IRequest
    {
    }
}

file[9] = BatchProcess\InterceptEmail\BatchProcess.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.BatchProcess.InterceptEmail
{
    public partial record BatchProcessInterceptEmailRequest : IRequest
    {
    }
}

file[10] = BatchProcess\InterceptFile\BatchProcess.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.BatchProcess.InterceptFile
{
    public partial record BatchProcessInterceptFileRequest : IRequest
    {
    }
}

file[11] = BatchProcess\FinesVicRoad\BatchProcess.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.BatchProcess.FinesVicRoad
{
    public partial record BatchProcessFinesVicRoadRequest : IRequest
    {
    }
}

file[12] = BatchProcess\SqlMaintenance\BatchProcess.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.BatchProcess.SqlMaintenance
{
    public partial record BatchProcessSqlMaintenanceRequest : IRequest
    {
    }
}

file[13] = BatchProcess\TasInfringmentEmail\BatchProcess.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.BatchProcess.TasInfringmentEmail
{
    public partial record BatchProcessTasInfringmentEmailRequest : IRequest
    {
    }
}

file[14] = Event\Search\Event.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.Event.Search
{
    public partial record EventSearchRequest : IRequest<Result<EventSearchResult>>
    {
        public DateTimeOffset ToDate { get;  set; }

        public DateTimeOffset FromDate { get;  set; }

        public string HomeLocation { get;  set; }

        public string Team { get;  set; }

        public bool MyOrganisation { get;  set; }

        public string InterceptNumber { get;  set; }

        public string NoticeNumber { get;  set; }

        public string Registration { get;  set; }

        public string VIN { get;  set; }

        public string ChassisNumber { get;  set; }

        public int StateID { get;  set; }

        public string NoticeType { get;  set; }

        public string LicenceNumber { get;  set; }

        public string FirstName { get;  set; }

        public string LastName { get;  set; }

        public DateTimeOffset DOB { get;  set; }

        public string OrganisationName { get;  set; }

        public string ACN { get;  set; }

        public string OfficerID { get;  set; }

        public string OfficerLastName { get;  set; }

        public bool HasAction { get;  set; }

    }
    public partial record EventSearchResult
    {
        public int Id { get;  set; }

        public string Number { get;  set; }

        public DateTimeOffset OccuredDate { get;  set; }

        public string VehicleInfo { get;  set; }

        public string Description { get;  set; }

        public bool HasNotice { get;  set; }

        public string State { get;  set; }

        public string Source { get;  set; }

        public string Status { get;  set; }

        public bool IsHistorical { get;  set; }

    }
}

file[15] = Event\Summary\Event.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.Event.Summary
{
    public partial record EventSummaryRequest : IRequest<Result<EventSummaryResult>>
    {
        public int Id { get;  set; }

    }
    public partial record EventSummaryResult
    {
    }
}

file[16] = Event\Save\Event.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.Event.Save
{
    public partial record EventSaveRequest : IRequest<Result<EventSaveResult>>
    {
        public int Id { get;  set; }

        public string Status { get;  set; }

        public Guid CreationID { get;  set; }

        public int OrganisationID { get;  set; }

        public DateTimeOffset ReviewedDateTime { get;  set; }

        public DateTimeOffset ReportedOnDate { get;  set; }

        public DateTimeOffset TookPlaceStartDate { get;  set; }

        public DateTimeOffset TookPlaceEndDate { get;  set; }

        public DateTimeOffset CreateDate { get;  set; }

        public DateTimeOffset CompletedDate { get;  set; }

        public string MethodOfIntercept { get;  set; }

        public string DirectionOfTravel { get;  set; }

        public string OperationName { get;  set; }

        public bool Light { get;  set; }

        public bool Siren { get;  set; }

        public bool UrgentDutyDriving { get;  set; }

        public DateTimeOffset VehicleReleaseDate { get;  set; }

        public bool VehicleGrounded { get;  set; }

    }
    public partial record EventSaveResult
    {
    }
}

file[17] = Event\Index\Event.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.Event.Index
{
    public partial record EventDetailRequest : IRequest<Result<EventDetailResult>>
    {
        public int Id { get;  set; }

    }
    public partial record EventDetailResult
    {
        public int Id { get;  set; }

        public string Source { get;  set; }

        public string Status { get;  set; }

        public int OrganisationID { get;  set; }

        public string ReviewedUser { get;  set; }

        public DateTimeOffset ReviewedDateTime { get;  set; }

        public DateTimeOffset ReportedOnDate { get;  set; }

        public DateTimeOffset TookPlaceStartDate { get;  set; }

        public DateTimeOffset TookPlaceEndDate { get;  set; }

        public DateTimeOffset CreateDate { get;  set; }

        public DateTimeOffset CompletedDate { get;  set; }

        public DateTimeOffset SystemTimestamp { get;  set; }

        public string MethodOfIntercept { get;  set; }

        public string DirectionOfTravel { get;  set; }

        public string OperationName { get;  set; }

        public bool Light { get;  set; }

        public bool Siren { get;  set; }

        public bool UrgentDutyDriving { get;  set; }

        public DateTimeOffset VehicleReleaseDate { get;  set; }

        public bool VehicleGrounded { get;  set; }

    }
}

file[18] = Organisation\Search\Organisation.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.Organisation.Search
{
    public partial record OrganisationSearchRequest : IRequest<Result<IEnumerable<OrganisationSearchResult>>>
    {
        public string? Name { get;  set; }

        public string ACN { get;  set; }

    }
    public partial record OrganisationSearchResult
    {
        public string? Name { get;  set; }

        public string ACN { get;  set; }

        public int? AlertLevel { get;  set; }

        public int? AssociatedAlertLevel { get;  set; }

        public string Source { get;  set; }

        public string Type { get;  set; }

        public string Status { get;  set; }

    }
}

file[19] = Organisation\Index\Organisation.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.Organisation.Index
{
    public partial record OrganisationByIdRequest : IRequest<Result<OrganisationDetailResult>>
    {
        public string Id { get;  set; }

        public string Juro { get;  set; }

        public bool IncludeSilentAlert { get;  set; }

    }
    public partial record OrganisationDetailResult
    {
        public string Name { get;  set; }

        public string ACN { get;  set; }

        public int? AlertLevel { get;  set; }

        public int? AssociatedAlertLevel { get;  set; }

        public string Source { get;  set; }

        public string Type { get;  set; }

        public string Status { get;  set; }

    }
}

file[20] = Organisation\Save\Organisation.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.Organisation.Save
{
    public partial record OrganisationSaveRequest : IRequest<Result<OrganisationSaveResult>>
    {
        public string Name { get;  set; }

        public string ACN { get;  set; }

        public OrganisationTypes TypeId { get;  set; }

        public Guid? CreationId { get;  set; }

    }
    public partial record OrganisationSaveResult
    {
        public string Id { get;  set; }

    }
}

file[21] = Vehicle\Create\Vehicle.generated.cs
// Auto-generated using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0

// --------------------------------------------------------------------------------
// WARNING: This file will be overwritten if re-generation is triggered.
// --------------------------------------------------------------------------------

#nullable enable

namespace Nhvr.Rcms.BusinessLogic.Vehicle.Create
{
    public partial record VehicleCreateRequest : IRequest
    {
        public States RegistrationState { get;  set; }

        public string? RegistrationNumber { get;  set; }

        public bool IsNationalRegistration { get;  set; }

        public string? VehicleIdentificationNumber { get;  set; }

        public string? EngineNumber { get;  set; }

        public string? ChassisNumber { get;  set; }

        public string SourceVehicleId { get;  set; }

        public SourceSystemTypes SystemId { get;  set; }

    }
}

file[22] = ActivityLog\Validators\ActivityLogAddRequestValidator.cs
// Created using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0
// NOTE: This file cannot be overwritten when regenerated

using Nhvr.Rcms.BusinessLogic.ActivityLog.Add;

namespace Nhvr.Rcms.BusinessLogic.ActivityLog.Validators
{
    public class ActivityLogAddRequestValidator : AbstractValidator<ActivityLogAddRequest>
    {
        public ActivityLogAddRequestValidator()
        {
            RuleFor(p => p.DateAdded).NotNull();
            RuleFor(p => p.StartTime).NotNull();
            RuleFor(p => p.ActivityType).NotNull();
        }
    }
}

file[23] = ActivityLog\Validators\ActivityLogUpdateRequestValidator.cs
// Created using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0
// NOTE: This file cannot be overwritten when regenerated

using Nhvr.Rcms.BusinessLogic.ActivityLog.Update;

namespace Nhvr.Rcms.BusinessLogic.ActivityLog.Validators
{
    public class ActivityLogUpdateRequestValidator : AbstractValidator<ActivityLogUpdateRequest>
    {
        public ActivityLogUpdateRequestValidator()
        {
            RuleFor(p => p.EndTime).NotNull();
            RuleFor(p => p.Remark).NotNull();
        }
    }
}

file[24] = ActivityLog\Validators\ActivityLogDeleteRequestValidator.cs
// Created using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0
// NOTE: This file cannot be overwritten when regenerated

using Nhvr.Rcms.BusinessLogic.ActivityLog.Delete;

namespace Nhvr.Rcms.BusinessLogic.ActivityLog.Validators
{
    public class ActivityLogDeleteRequestValidator : AbstractValidator<ActivityLogDeleteRequest>
    {
        public ActivityLogDeleteRequestValidator()
        {
            RuleFor(p => p.Id).NotNull();
        }
    }
}

file[25] = Alert\Validators\AlertSaveRequestValidator.cs
// Created using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0
// NOTE: This file cannot be overwritten when regenerated

using Nhvr.Rcms.BusinessLogic.Alert.Save;

namespace Nhvr.Rcms.BusinessLogic.Alert.Validators
{
    public class AlertSaveRequestValidator : AbstractValidator<AlertSaveRequest>
    {
        public AlertSaveRequestValidator()
        {
            RuleFor(p => p.Id).NotNull();
            RuleFor(p => p.AlertLevel).NotNull();
            RuleFor(p => p.EffectiveDate).NotNull();
            RuleFor(p => p.ExpiryDate).NotNull();
            RuleFor(p => p.Remark).NotNull();
            RuleFor(p => p.Silent).NotNull();
            RuleFor(p => p.SilentNotifyContactId).NotNull();
            RuleFor(p => p.PersonId).NotNull();
            RuleFor(p => p.VehicleId).NotNull();
            RuleFor(p => p.OrganisationId).NotNull();
        }
    }
}

file[26] = Alert\Validators\AlertDeleteRequestValidator.cs
// Created using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0
// NOTE: This file cannot be overwritten when regenerated

using Nhvr.Rcms.BusinessLogic.Alert.Delete;

namespace Nhvr.Rcms.BusinessLogic.Alert.Validators
{
    public class AlertDeleteRequestValidator : AbstractValidator<AlertDeleteRequest>
    {
        public AlertDeleteRequestValidator()
        {
            RuleFor(p => p.Id).NotNull();
            RuleFor(p => p.Reason).NotNull().MaximumLength(128);
        }
    }
}

file[27] = Event\Validators\EventSearchRequestValidator.cs
// Created using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0
// NOTE: This file cannot be overwritten when regenerated

using Nhvr.Rcms.BusinessLogic.Event.Search;

namespace Nhvr.Rcms.BusinessLogic.Event.Validators
{
    public class EventSearchRequestValidator : AbstractValidator<EventSearchRequest>
    {
        public EventSearchRequestValidator()
        {
            RuleFor(p => p.ToDate).NotNull();
            RuleFor(p => p.FromDate).NotNull();
            RuleFor(p => p.HomeLocation).NotNull();
            RuleFor(p => p.Team).NotNull();
            RuleFor(p => p.MyOrganisation).NotNull();
            RuleFor(p => p.InterceptNumber).NotNull();
            RuleFor(p => p.NoticeNumber).NotNull();
            RuleFor(p => p.Registration).NotNull();
            RuleFor(p => p.VIN).NotNull();
            RuleFor(p => p.ChassisNumber).NotNull();
            RuleFor(p => p.StateID).NotNull();
            RuleFor(p => p.NoticeType).NotNull();
            RuleFor(p => p.LicenceNumber).NotNull();
            RuleFor(p => p.FirstName).NotNull();
            RuleFor(p => p.LastName).NotNull();
            RuleFor(p => p.DOB).NotNull();
            RuleFor(p => p.OrganisationName).NotNull();
            RuleFor(p => p.ACN).NotNull();
            RuleFor(p => p.OfficerID).NotNull();
            RuleFor(p => p.OfficerLastName).NotNull();
            RuleFor(p => p.HasAction).NotNull();
        }
    }
}

file[28] = Event\Validators\EventSummaryRequestValidator.cs
// Created using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0
// NOTE: This file cannot be overwritten when regenerated

using Nhvr.Rcms.BusinessLogic.Event.Summary;

namespace Nhvr.Rcms.BusinessLogic.Event.Validators
{
    public class EventSummaryRequestValidator : AbstractValidator<EventSummaryRequest>
    {
        public EventSummaryRequestValidator()
        {
            RuleFor(p => p.Id).NotNull();
        }
    }
}

file[29] = Event\Validators\EventSaveRequestValidator.cs
// Created using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0
// NOTE: This file cannot be overwritten when regenerated

using Nhvr.Rcms.BusinessLogic.Event.Save;

namespace Nhvr.Rcms.BusinessLogic.Event.Validators
{
    public class EventSaveRequestValidator : AbstractValidator<EventSaveRequest>
    {
        public EventSaveRequestValidator()
        {
            RuleFor(p => p.Id).NotNull();
            RuleFor(p => p.Status).NotNull();
            RuleFor(p => p.CreationID).NotNull();
            RuleFor(p => p.OrganisationID).NotNull();
            RuleFor(p => p.ReviewedDateTime).NotNull();
            RuleFor(p => p.ReportedOnDate).NotNull();
            RuleFor(p => p.TookPlaceStartDate).NotNull();
            RuleFor(p => p.TookPlaceEndDate).NotNull();
            RuleFor(p => p.CreateDate).NotNull();
            RuleFor(p => p.CompletedDate).NotNull();
            RuleFor(p => p.MethodOfIntercept).NotNull();
            RuleFor(p => p.DirectionOfTravel).NotNull();
            RuleFor(p => p.OperationName).NotNull();
            RuleFor(p => p.Light).NotNull();
            RuleFor(p => p.Siren).NotNull();
            RuleFor(p => p.UrgentDutyDriving).NotNull();
            RuleFor(p => p.VehicleReleaseDate).NotNull();
            RuleFor(p => p.VehicleGrounded).NotNull();
        }
    }
}

file[30] = Event\Validators\EventDetailRequestValidator.cs
// Created using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0
// NOTE: This file cannot be overwritten when regenerated

using Nhvr.Rcms.BusinessLogic.Event.Index;

namespace Nhvr.Rcms.BusinessLogic.Event.Validators
{
    public class EventDetailRequestValidator : AbstractValidator<EventDetailRequest>
    {
        public EventDetailRequestValidator()
        {
            RuleFor(p => p.Id).NotNull();
        }
    }
}

file[31] = Organisation\Validators\OrganisationSearchRequestValidator.cs
// Created using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0
// NOTE: This file cannot be overwritten when regenerated

using Nhvr.Rcms.BusinessLogic.Organisation.Search;

namespace Nhvr.Rcms.BusinessLogic.Organisation.Validators
{
    public class OrganisationSearchRequestValidator : AbstractValidator<OrganisationSearchRequest>
    {
        public OrganisationSearchRequestValidator()
        {
            RuleFor(p => p.ACN).NotNull();
        }
    }
}

file[32] = Organisation\Validators\OrganisationByIdRequestValidator.cs
// Created using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0
// NOTE: This file cannot be overwritten when regenerated

using Nhvr.Rcms.BusinessLogic.Organisation.Index;

namespace Nhvr.Rcms.BusinessLogic.Organisation.Validators
{
    public class OrganisationByIdRequestValidator : AbstractValidator<OrganisationByIdRequest>
    {
        public OrganisationByIdRequestValidator()
        {
            RuleFor(p => p.Id).NotNull();
            RuleFor(p => p.Juro).NotNull();
            RuleFor(p => p.IncludeSilentAlert).NotNull();
        }
    }
}

file[33] = Organisation\Validators\OrganisationSaveRequestValidator.cs
// Created using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0
// NOTE: This file cannot be overwritten when regenerated

using Nhvr.Rcms.BusinessLogic.Organisation.Save;

namespace Nhvr.Rcms.BusinessLogic.Organisation.Validators
{
    public class OrganisationSaveRequestValidator : AbstractValidator<OrganisationSaveRequest>
    {
        public OrganisationSaveRequestValidator()
        {
            RuleFor(p => p.Name).NotNull();
            RuleFor(p => p.ACN).NotNull();
            RuleFor(p => p.TypeId).NotNull();
        }
    }
}

file[34] = Vehicle\Validators\VehicleCreateRequestValidator.cs
// Created using OurPresence.Modeller template 'Business Logic Behaviour' version 1.0.0
// NOTE: This file cannot be overwritten when regenerated

using Nhvr.Rcms.BusinessLogic.Vehicle.Create;

namespace Nhvr.Rcms.BusinessLogic.Vehicle.Validators
{
    public class VehicleCreateRequestValidator : AbstractValidator<VehicleCreateRequest>
    {
        public VehicleCreateRequestValidator()
        {
            RuleFor(p => p.RegistrationNumber).MaximumLength(10);
            RuleFor(p => p.IsNationalRegistration).NotNull();
            RuleFor(p => p.VehicleIdentificationNumber).MaximumLength(20);
            RuleFor(p => p.EngineNumber).MaximumLength(20);
            RuleFor(p => p.ChassisNumber).MaximumLength(32);
            RuleFor(p => p.SourceVehicleId).NotNull().MaximumLength(64);
            RuleFor(p => p.SystemId).NotNull();
        }
    }
}

